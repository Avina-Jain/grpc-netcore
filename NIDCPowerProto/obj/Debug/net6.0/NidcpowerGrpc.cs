// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nidcpower.proto
// </auto-generated>
// Original file comments:
// ---------------------------------------------------------------------
// This file is generated from NI-DCPower API metadata version 23.0.0f517
// ---------------------------------------------------------------------
// Proto file for the NI-DCPower Metadata
// ---------------------------------------------------------------------
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NationalInstruments.Grpc.DCPower {
  public static partial class NiDCPower
  {
    static readonly string __ServiceName = "nidcpower_grpc.NiDCPower";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.AbortRequest> __Marshaller_nidcpower_grpc_AbortRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.AbortRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.AbortResponse> __Marshaller_nidcpower_grpc_AbortResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.AbortResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest> __Marshaller_nidcpower_grpc_AbortWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse> __Marshaller_nidcpower_grpc_AbortWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest> __Marshaller_nidcpower_grpc_CalSelfCalibrateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse> __Marshaller_nidcpower_grpc_CalSelfCalibrateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ClearErrorRequest> __Marshaller_nidcpower_grpc_ClearErrorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ClearErrorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ClearErrorResponse> __Marshaller_nidcpower_grpc_ClearErrorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ClearErrorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest> __Marshaller_nidcpower_grpc_ClearInterchangeWarningsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse> __Marshaller_nidcpower_grpc_ClearInterchangeWarningsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest> __Marshaller_nidcpower_grpc_ClearLatchedOutputCutoffStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse> __Marshaller_nidcpower_grpc_ClearLatchedOutputCutoffStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CloseRequest> __Marshaller_nidcpower_grpc_CloseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CloseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CloseResponse> __Marshaller_nidcpower_grpc_CloseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CloseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CommitRequest> __Marshaller_nidcpower_grpc_CommitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CommitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CommitResponse> __Marshaller_nidcpower_grpc_CommitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CommitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest> __Marshaller_nidcpower_grpc_CommitWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse> __Marshaller_nidcpower_grpc_CommitWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest> __Marshaller_nidcpower_grpc_ConfigureApertureTimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse> __Marshaller_nidcpower_grpc_ConfigureApertureTimeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest> __Marshaller_nidcpower_grpc_ConfigureAutoZeroRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse> __Marshaller_nidcpower_grpc_ConfigureAutoZeroResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest> __Marshaller_nidcpower_grpc_ConfigureCurrentLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse> __Marshaller_nidcpower_grpc_ConfigureCurrentLevelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest> __Marshaller_nidcpower_grpc_ConfigureCurrentLevelRangeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse> __Marshaller_nidcpower_grpc_ConfigureCurrentLevelRangeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest> __Marshaller_nidcpower_grpc_ConfigureCurrentLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse> __Marshaller_nidcpower_grpc_ConfigureCurrentLimitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest> __Marshaller_nidcpower_grpc_ConfigureCurrentLimitRangeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse> __Marshaller_nidcpower_grpc_ConfigureCurrentLimitRangeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeMeasureTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeMeasureTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgePulseTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgePulseTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgePulseTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgePulseTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSequenceAdvanceTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSequenceAdvanceTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSourceTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSourceTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSourceTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSourceTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeStartTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeStartTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeStartTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeStartTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest> __Marshaller_nidcpower_grpc_ConfigureLCRCustomCableCompensationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse> __Marshaller_nidcpower_grpc_ConfigureLCRCustomCableCompensationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest> __Marshaller_nidcpower_grpc_ConfigureOutputEnabledRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse> __Marshaller_nidcpower_grpc_ConfigureOutputEnabledResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest> __Marshaller_nidcpower_grpc_ConfigureOutputFunctionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse> __Marshaller_nidcpower_grpc_ConfigureOutputFunctionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest> __Marshaller_nidcpower_grpc_ConfigureOutputResistanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse> __Marshaller_nidcpower_grpc_ConfigureOutputResistanceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest> __Marshaller_nidcpower_grpc_ConfigureOvpRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse> __Marshaller_nidcpower_grpc_ConfigureOvpResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest> __Marshaller_nidcpower_grpc_ConfigurePowerLineFrequencyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse> __Marshaller_nidcpower_grpc_ConfigurePowerLineFrequencyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest> __Marshaller_nidcpower_grpc_ConfigurePulseBiasCurrentLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse> __Marshaller_nidcpower_grpc_ConfigurePulseBiasCurrentLevelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest> __Marshaller_nidcpower_grpc_ConfigurePulseBiasCurrentLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse> __Marshaller_nidcpower_grpc_ConfigurePulseBiasCurrentLimitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest> __Marshaller_nidcpower_grpc_ConfigurePulseBiasVoltageLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse> __Marshaller_nidcpower_grpc_ConfigurePulseBiasVoltageLevelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest> __Marshaller_nidcpower_grpc_ConfigurePulseBiasVoltageLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse> __Marshaller_nidcpower_grpc_ConfigurePulseBiasVoltageLimitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest> __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse> __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLevelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest> __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLevelRangeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse> __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLevelRangeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest> __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse> __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLimitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest> __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLimitRangeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse> __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLimitRangeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest> __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse> __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLevelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest> __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLevelRangeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse> __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLevelRangeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest> __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse> __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLimitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest> __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLimitRangeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse> __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLimitRangeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest> __Marshaller_nidcpower_grpc_ConfigureSenseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse> __Marshaller_nidcpower_grpc_ConfigureSenseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeMeasureTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeMeasureTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgePulseTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgePulseTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgePulseTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgePulseTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSourceTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSourceTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeStartTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeStartTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeStartTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeStartTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest> __Marshaller_nidcpower_grpc_ConfigureSourceModeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse> __Marshaller_nidcpower_grpc_ConfigureSourceModeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest> __Marshaller_nidcpower_grpc_ConfigureSourceModeWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse> __Marshaller_nidcpower_grpc_ConfigureSourceModeWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest> __Marshaller_nidcpower_grpc_ConfigureVoltageLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse> __Marshaller_nidcpower_grpc_ConfigureVoltageLevelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest> __Marshaller_nidcpower_grpc_ConfigureVoltageLevelRangeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse> __Marshaller_nidcpower_grpc_ConfigureVoltageLevelRangeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest> __Marshaller_nidcpower_grpc_ConfigureVoltageLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse> __Marshaller_nidcpower_grpc_ConfigureVoltageLimitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest> __Marshaller_nidcpower_grpc_ConfigureVoltageLimitRangeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse> __Marshaller_nidcpower_grpc_ConfigureVoltageLimitRangeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceCommitStepWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceCommitStepWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceStepRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceStepResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceStepWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceStepWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse> __Marshaller_nidcpower_grpc_CreateAdvancedSequenceWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest> __Marshaller_nidcpower_grpc_DeleteAdvancedSequenceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse> __Marshaller_nidcpower_grpc_DeleteAdvancedSequenceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest> __Marshaller_nidcpower_grpc_DeleteAdvancedSequenceWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse> __Marshaller_nidcpower_grpc_DeleteAdvancedSequenceWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableRequest> __Marshaller_nidcpower_grpc_DisableRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableResponse> __Marshaller_nidcpower_grpc_DisableResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest> __Marshaller_nidcpower_grpc_DisablePulseTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse> __Marshaller_nidcpower_grpc_DisablePulseTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_DisablePulseTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_DisablePulseTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest> __Marshaller_nidcpower_grpc_DisableSequenceAdvanceTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse> __Marshaller_nidcpower_grpc_DisableSequenceAdvanceTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_DisableSequenceAdvanceTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_DisableSequenceAdvanceTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_DisableShutdownTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_DisableShutdownTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest> __Marshaller_nidcpower_grpc_DisableSourceTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse> __Marshaller_nidcpower_grpc_DisableSourceTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_DisableSourceTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_DisableSourceTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest> __Marshaller_nidcpower_grpc_DisableStartTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse> __Marshaller_nidcpower_grpc_DisableStartTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_DisableStartTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_DisableStartTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest> __Marshaller_nidcpower_grpc_ErrorMessageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse> __Marshaller_nidcpower_grpc_ErrorMessageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest> __Marshaller_nidcpower_grpc_ErrorQueryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse> __Marshaller_nidcpower_grpc_ErrorQueryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest> __Marshaller_nidcpower_grpc_ExportAttributeConfigurationBufferRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse> __Marshaller_nidcpower_grpc_ExportAttributeConfigurationBufferResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest> __Marshaller_nidcpower_grpc_ExportAttributeConfigurationFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse> __Marshaller_nidcpower_grpc_ExportAttributeConfigurationFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ExportSignalRequest> __Marshaller_nidcpower_grpc_ExportSignalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ExportSignalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ExportSignalResponse> __Marshaller_nidcpower_grpc_ExportSignalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ExportSignalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest> __Marshaller_nidcpower_grpc_ExportSignalWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse> __Marshaller_nidcpower_grpc_ExportSignalWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest> __Marshaller_nidcpower_grpc_FetchMultipleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse> __Marshaller_nidcpower_grpc_FetchMultipleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest> __Marshaller_nidcpower_grpc_FetchMultipleLCRRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse> __Marshaller_nidcpower_grpc_FetchMultipleLCRResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest> __Marshaller_nidcpower_grpc_GetAttributeViBooleanRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse> __Marshaller_nidcpower_grpc_GetAttributeViBooleanResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request> __Marshaller_nidcpower_grpc_GetAttributeViInt32Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response> __Marshaller_nidcpower_grpc_GetAttributeViInt32Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request> __Marshaller_nidcpower_grpc_GetAttributeViInt64Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response> __Marshaller_nidcpower_grpc_GetAttributeViInt64Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request> __Marshaller_nidcpower_grpc_GetAttributeViReal64Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response> __Marshaller_nidcpower_grpc_GetAttributeViReal64Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest> __Marshaller_nidcpower_grpc_GetAttributeViSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse> __Marshaller_nidcpower_grpc_GetAttributeViSessionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest> __Marshaller_nidcpower_grpc_GetAttributeViStringRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse> __Marshaller_nidcpower_grpc_GetAttributeViStringResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest> __Marshaller_nidcpower_grpc_GetChannelNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse> __Marshaller_nidcpower_grpc_GetChannelNameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest> __Marshaller_nidcpower_grpc_GetChannelNameFromStringRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse> __Marshaller_nidcpower_grpc_GetChannelNameFromStringResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetErrorRequest> __Marshaller_nidcpower_grpc_GetErrorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetErrorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetErrorResponse> __Marshaller_nidcpower_grpc_GetErrorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetErrorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest> __Marshaller_nidcpower_grpc_GetExtCalLastDateAndTimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse> __Marshaller_nidcpower_grpc_GetExtCalLastDateAndTimeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest> __Marshaller_nidcpower_grpc_GetExtCalLastTempRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse> __Marshaller_nidcpower_grpc_GetExtCalLastTempResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest> __Marshaller_nidcpower_grpc_GetExtCalRecommendedIntervalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse> __Marshaller_nidcpower_grpc_GetExtCalRecommendedIntervalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest> __Marshaller_nidcpower_grpc_GetLCRCompensationLastDateAndTimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse> __Marshaller_nidcpower_grpc_GetLCRCompensationLastDateAndTimeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest> __Marshaller_nidcpower_grpc_GetLCRCustomCableCompensationDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse> __Marshaller_nidcpower_grpc_GetLCRCustomCableCompensationDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest> __Marshaller_nidcpower_grpc_GetNextCoercionRecordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse> __Marshaller_nidcpower_grpc_GetNextCoercionRecordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest> __Marshaller_nidcpower_grpc_GetNextInterchangeWarningRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse> __Marshaller_nidcpower_grpc_GetNextInterchangeWarningResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest> __Marshaller_nidcpower_grpc_GetSelfCalLastDateAndTimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse> __Marshaller_nidcpower_grpc_GetSelfCalLastDateAndTimeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest> __Marshaller_nidcpower_grpc_GetSelfCalLastTempRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse> __Marshaller_nidcpower_grpc_GetSelfCalLastTempResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest> __Marshaller_nidcpower_grpc_ImportAttributeConfigurationBufferRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse> __Marshaller_nidcpower_grpc_ImportAttributeConfigurationBufferResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest> __Marshaller_nidcpower_grpc_ImportAttributeConfigurationFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse> __Marshaller_nidcpower_grpc_ImportAttributeConfigurationFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest> __Marshaller_nidcpower_grpc_InitializeWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse> __Marshaller_nidcpower_grpc_InitializeWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest> __Marshaller_nidcpower_grpc_InitializeWithIndependentChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse> __Marshaller_nidcpower_grpc_InitializeWithIndependentChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InitiateRequest> __Marshaller_nidcpower_grpc_InitiateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InitiateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InitiateResponse> __Marshaller_nidcpower_grpc_InitiateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InitiateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest> __Marshaller_nidcpower_grpc_InitiateWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse> __Marshaller_nidcpower_grpc_InitiateWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest> __Marshaller_nidcpower_grpc_InvalidateAllAttributesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse> __Marshaller_nidcpower_grpc_InvalidateAllAttributesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.MeasureRequest> __Marshaller_nidcpower_grpc_MeasureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.MeasureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.MeasureResponse> __Marshaller_nidcpower_grpc_MeasureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.MeasureResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest> __Marshaller_nidcpower_grpc_MeasureMultipleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse> __Marshaller_nidcpower_grpc_MeasureMultipleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest> __Marshaller_nidcpower_grpc_MeasureMultipleLCRRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse> __Marshaller_nidcpower_grpc_MeasureMultipleLCRResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest> __Marshaller_nidcpower_grpc_PerformLCRLoadCompensationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse> __Marshaller_nidcpower_grpc_PerformLCRLoadCompensationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest> __Marshaller_nidcpower_grpc_PerformLCROpenCompensationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse> __Marshaller_nidcpower_grpc_PerformLCROpenCompensationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest> __Marshaller_nidcpower_grpc_PerformLCROpenCustomCableCompensationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse> __Marshaller_nidcpower_grpc_PerformLCROpenCustomCableCompensationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest> __Marshaller_nidcpower_grpc_PerformLCRShortCompensationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse> __Marshaller_nidcpower_grpc_PerformLCRShortCompensationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest> __Marshaller_nidcpower_grpc_PerformLCRShortCustomCableCompensationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse> __Marshaller_nidcpower_grpc_PerformLCRShortCustomCableCompensationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest> __Marshaller_nidcpower_grpc_QueryInComplianceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse> __Marshaller_nidcpower_grpc_QueryInComplianceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest> __Marshaller_nidcpower_grpc_QueryLatchedOutputCutoffStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse> __Marshaller_nidcpower_grpc_QueryLatchedOutputCutoffStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest> __Marshaller_nidcpower_grpc_QueryMaxCurrentLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse> __Marshaller_nidcpower_grpc_QueryMaxCurrentLimitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest> __Marshaller_nidcpower_grpc_QueryMaxVoltageLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse> __Marshaller_nidcpower_grpc_QueryMaxVoltageLevelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest> __Marshaller_nidcpower_grpc_QueryMinCurrentLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse> __Marshaller_nidcpower_grpc_QueryMinCurrentLimitResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest> __Marshaller_nidcpower_grpc_QueryOutputStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse> __Marshaller_nidcpower_grpc_QueryOutputStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest> __Marshaller_nidcpower_grpc_ReadCurrentTemperatureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse> __Marshaller_nidcpower_grpc_ReadCurrentTemperatureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetRequest> __Marshaller_nidcpower_grpc_ResetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetResponse> __Marshaller_nidcpower_grpc_ResetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest> __Marshaller_nidcpower_grpc_ResetDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse> __Marshaller_nidcpower_grpc_ResetDeviceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest> __Marshaller_nidcpower_grpc_ResetInterchangeCheckRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse> __Marshaller_nidcpower_grpc_ResetInterchangeCheckResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest> __Marshaller_nidcpower_grpc_ResetWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse> __Marshaller_nidcpower_grpc_ResetWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest> __Marshaller_nidcpower_grpc_ResetWithDefaultsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse> __Marshaller_nidcpower_grpc_ResetWithDefaultsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest> __Marshaller_nidcpower_grpc_RevisionQueryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse> __Marshaller_nidcpower_grpc_RevisionQueryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SelfTestRequest> __Marshaller_nidcpower_grpc_SelfTestRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SelfTestRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SelfTestResponse> __Marshaller_nidcpower_grpc_SelfTestResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SelfTestResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest> __Marshaller_nidcpower_grpc_SendSoftwareEdgeTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse> __Marshaller_nidcpower_grpc_SendSoftwareEdgeTriggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest> __Marshaller_nidcpower_grpc_SendSoftwareEdgeTriggerWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse> __Marshaller_nidcpower_grpc_SendSoftwareEdgeTriggerWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest> __Marshaller_nidcpower_grpc_SetAttributeViBooleanRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse> __Marshaller_nidcpower_grpc_SetAttributeViBooleanResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request> __Marshaller_nidcpower_grpc_SetAttributeViInt32Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response> __Marshaller_nidcpower_grpc_SetAttributeViInt32Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request> __Marshaller_nidcpower_grpc_SetAttributeViInt64Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response> __Marshaller_nidcpower_grpc_SetAttributeViInt64Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request> __Marshaller_nidcpower_grpc_SetAttributeViReal64Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response> __Marshaller_nidcpower_grpc_SetAttributeViReal64Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest> __Marshaller_nidcpower_grpc_SetAttributeViSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse> __Marshaller_nidcpower_grpc_SetAttributeViSessionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest> __Marshaller_nidcpower_grpc_SetAttributeViStringRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse> __Marshaller_nidcpower_grpc_SetAttributeViStringResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetSequenceRequest> __Marshaller_nidcpower_grpc_SetSequenceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetSequenceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.SetSequenceResponse> __Marshaller_nidcpower_grpc_SetSequenceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.SetSequenceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.WaitForEventRequest> __Marshaller_nidcpower_grpc_WaitForEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.WaitForEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.WaitForEventResponse> __Marshaller_nidcpower_grpc_WaitForEventResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.WaitForEventResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest> __Marshaller_nidcpower_grpc_WaitForEventWithChannelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse> __Marshaller_nidcpower_grpc_WaitForEventWithChannelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.AbortRequest, global::NationalInstruments.Grpc.DCPower.AbortResponse> __Method_Abort = new grpc::Method<global::NationalInstruments.Grpc.DCPower.AbortRequest, global::NationalInstruments.Grpc.DCPower.AbortResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Abort",
        __Marshaller_nidcpower_grpc_AbortRequest,
        __Marshaller_nidcpower_grpc_AbortResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse> __Method_AbortWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AbortWithChannels",
        __Marshaller_nidcpower_grpc_AbortWithChannelsRequest,
        __Marshaller_nidcpower_grpc_AbortWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest, global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse> __Method_CalSelfCalibrate = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest, global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CalSelfCalibrate",
        __Marshaller_nidcpower_grpc_CalSelfCalibrateRequest,
        __Marshaller_nidcpower_grpc_CalSelfCalibrateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ClearErrorRequest, global::NationalInstruments.Grpc.DCPower.ClearErrorResponse> __Method_ClearError = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ClearErrorRequest, global::NationalInstruments.Grpc.DCPower.ClearErrorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClearError",
        __Marshaller_nidcpower_grpc_ClearErrorRequest,
        __Marshaller_nidcpower_grpc_ClearErrorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest, global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse> __Method_ClearInterchangeWarnings = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest, global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClearInterchangeWarnings",
        __Marshaller_nidcpower_grpc_ClearInterchangeWarningsRequest,
        __Marshaller_nidcpower_grpc_ClearInterchangeWarningsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest, global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse> __Method_ClearLatchedOutputCutoffState = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest, global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClearLatchedOutputCutoffState",
        __Marshaller_nidcpower_grpc_ClearLatchedOutputCutoffStateRequest,
        __Marshaller_nidcpower_grpc_ClearLatchedOutputCutoffStateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CloseRequest, global::NationalInstruments.Grpc.DCPower.CloseResponse> __Method_Close = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CloseRequest, global::NationalInstruments.Grpc.DCPower.CloseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Close",
        __Marshaller_nidcpower_grpc_CloseRequest,
        __Marshaller_nidcpower_grpc_CloseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CommitRequest, global::NationalInstruments.Grpc.DCPower.CommitResponse> __Method_Commit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CommitRequest, global::NationalInstruments.Grpc.DCPower.CommitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Commit",
        __Marshaller_nidcpower_grpc_CommitRequest,
        __Marshaller_nidcpower_grpc_CommitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse> __Method_CommitWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CommitWithChannels",
        __Marshaller_nidcpower_grpc_CommitWithChannelsRequest,
        __Marshaller_nidcpower_grpc_CommitWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse> __Method_ConfigureApertureTime = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureApertureTime",
        __Marshaller_nidcpower_grpc_ConfigureApertureTimeRequest,
        __Marshaller_nidcpower_grpc_ConfigureApertureTimeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest, global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse> __Method_ConfigureAutoZero = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest, global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureAutoZero",
        __Marshaller_nidcpower_grpc_ConfigureAutoZeroRequest,
        __Marshaller_nidcpower_grpc_ConfigureAutoZeroResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse> __Method_ConfigureCurrentLevel = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureCurrentLevel",
        __Marshaller_nidcpower_grpc_ConfigureCurrentLevelRequest,
        __Marshaller_nidcpower_grpc_ConfigureCurrentLevelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse> __Method_ConfigureCurrentLevelRange = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureCurrentLevelRange",
        __Marshaller_nidcpower_grpc_ConfigureCurrentLevelRangeRequest,
        __Marshaller_nidcpower_grpc_ConfigureCurrentLevelRangeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse> __Method_ConfigureCurrentLimit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureCurrentLimit",
        __Marshaller_nidcpower_grpc_ConfigureCurrentLimitRequest,
        __Marshaller_nidcpower_grpc_ConfigureCurrentLimitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse> __Method_ConfigureCurrentLimitRange = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureCurrentLimitRange",
        __Marshaller_nidcpower_grpc_ConfigureCurrentLimitRangeRequest,
        __Marshaller_nidcpower_grpc_ConfigureCurrentLimitRangeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse> __Method_ConfigureDigitalEdgeMeasureTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeMeasureTrigger",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeMeasureTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeMeasureTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse> __Method_ConfigureDigitalEdgeMeasureTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeMeasureTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse> __Method_ConfigureDigitalEdgePulseTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgePulseTrigger",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgePulseTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgePulseTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse> __Method_ConfigureDigitalEdgePulseTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgePulseTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgePulseTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgePulseTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse> __Method_ConfigureDigitalEdgeSequenceAdvanceTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeSequenceAdvanceTrigger",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSequenceAdvanceTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSequenceAdvanceTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse> __Method_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse> __Method_ConfigureDigitalEdgeShutdownTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeShutdownTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse> __Method_ConfigureDigitalEdgeSourceTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeSourceTrigger",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSourceTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSourceTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse> __Method_ConfigureDigitalEdgeSourceTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeSourceTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSourceTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeSourceTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse> __Method_ConfigureDigitalEdgeStartTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeStartTrigger",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeStartTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeStartTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse> __Method_ConfigureDigitalEdgeStartTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDigitalEdgeStartTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeStartTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureDigitalEdgeStartTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse> __Method_ConfigureLCRCustomCableCompensation = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureLCRCustomCableCompensation",
        __Marshaller_nidcpower_grpc_ConfigureLCRCustomCableCompensationRequest,
        __Marshaller_nidcpower_grpc_ConfigureLCRCustomCableCompensationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse> __Method_ConfigureOutputEnabled = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureOutputEnabled",
        __Marshaller_nidcpower_grpc_ConfigureOutputEnabledRequest,
        __Marshaller_nidcpower_grpc_ConfigureOutputEnabledResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse> __Method_ConfigureOutputFunction = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureOutputFunction",
        __Marshaller_nidcpower_grpc_ConfigureOutputFunctionRequest,
        __Marshaller_nidcpower_grpc_ConfigureOutputFunctionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse> __Method_ConfigureOutputResistance = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureOutputResistance",
        __Marshaller_nidcpower_grpc_ConfigureOutputResistanceRequest,
        __Marshaller_nidcpower_grpc_ConfigureOutputResistanceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse> __Method_ConfigureOvp = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureOvp",
        __Marshaller_nidcpower_grpc_ConfigureOvpRequest,
        __Marshaller_nidcpower_grpc_ConfigureOvpResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse> __Method_ConfigurePowerLineFrequency = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePowerLineFrequency",
        __Marshaller_nidcpower_grpc_ConfigurePowerLineFrequencyRequest,
        __Marshaller_nidcpower_grpc_ConfigurePowerLineFrequencyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse> __Method_ConfigurePulseBiasCurrentLevel = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseBiasCurrentLevel",
        __Marshaller_nidcpower_grpc_ConfigurePulseBiasCurrentLevelRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseBiasCurrentLevelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse> __Method_ConfigurePulseBiasCurrentLimit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseBiasCurrentLimit",
        __Marshaller_nidcpower_grpc_ConfigurePulseBiasCurrentLimitRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseBiasCurrentLimitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse> __Method_ConfigurePulseBiasVoltageLevel = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseBiasVoltageLevel",
        __Marshaller_nidcpower_grpc_ConfigurePulseBiasVoltageLevelRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseBiasVoltageLevelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse> __Method_ConfigurePulseBiasVoltageLimit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseBiasVoltageLimit",
        __Marshaller_nidcpower_grpc_ConfigurePulseBiasVoltageLimitRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseBiasVoltageLimitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse> __Method_ConfigurePulseCurrentLevel = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseCurrentLevel",
        __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLevelRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLevelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse> __Method_ConfigurePulseCurrentLevelRange = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseCurrentLevelRange",
        __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLevelRangeRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLevelRangeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse> __Method_ConfigurePulseCurrentLimit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseCurrentLimit",
        __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLimitRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLimitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse> __Method_ConfigurePulseCurrentLimitRange = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseCurrentLimitRange",
        __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLimitRangeRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseCurrentLimitRangeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse> __Method_ConfigurePulseVoltageLevel = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseVoltageLevel",
        __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLevelRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLevelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse> __Method_ConfigurePulseVoltageLevelRange = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseVoltageLevelRange",
        __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLevelRangeRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLevelRangeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse> __Method_ConfigurePulseVoltageLimit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseVoltageLimit",
        __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLimitRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLimitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse> __Method_ConfigurePulseVoltageLimitRange = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigurePulseVoltageLimitRange",
        __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLimitRangeRequest,
        __Marshaller_nidcpower_grpc_ConfigurePulseVoltageLimitRangeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse> __Method_ConfigureSense = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSense",
        __Marshaller_nidcpower_grpc_ConfigureSenseRequest,
        __Marshaller_nidcpower_grpc_ConfigureSenseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse> __Method_ConfigureSoftwareEdgeMeasureTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeMeasureTrigger",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeMeasureTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeMeasureTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse> __Method_ConfigureSoftwareEdgeMeasureTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeMeasureTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse> __Method_ConfigureSoftwareEdgePulseTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgePulseTrigger",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgePulseTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgePulseTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse> __Method_ConfigureSoftwareEdgePulseTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgePulseTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgePulseTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgePulseTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse> __Method_ConfigureSoftwareEdgeSequenceAdvanceTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeSequenceAdvanceTrigger",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse> __Method_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse> __Method_ConfigureSoftwareEdgeShutdownTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeShutdownTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse> __Method_ConfigureSoftwareEdgeSourceTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeSourceTrigger",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSourceTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSourceTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse> __Method_ConfigureSoftwareEdgeSourceTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeSourceTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse> __Method_ConfigureSoftwareEdgeStartTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeStartTrigger",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeStartTriggerRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeStartTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse> __Method_ConfigureSoftwareEdgeStartTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSoftwareEdgeStartTriggerWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeStartTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureSoftwareEdgeStartTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse> __Method_ConfigureSourceMode = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSourceMode",
        __Marshaller_nidcpower_grpc_ConfigureSourceModeRequest,
        __Marshaller_nidcpower_grpc_ConfigureSourceModeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse> __Method_ConfigureSourceModeWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureSourceModeWithChannels",
        __Marshaller_nidcpower_grpc_ConfigureSourceModeWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ConfigureSourceModeWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse> __Method_ConfigureVoltageLevel = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureVoltageLevel",
        __Marshaller_nidcpower_grpc_ConfigureVoltageLevelRequest,
        __Marshaller_nidcpower_grpc_ConfigureVoltageLevelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse> __Method_ConfigureVoltageLevelRange = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureVoltageLevelRange",
        __Marshaller_nidcpower_grpc_ConfigureVoltageLevelRangeRequest,
        __Marshaller_nidcpower_grpc_ConfigureVoltageLevelRangeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse> __Method_ConfigureVoltageLimit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureVoltageLimit",
        __Marshaller_nidcpower_grpc_ConfigureVoltageLimitRequest,
        __Marshaller_nidcpower_grpc_ConfigureVoltageLimitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse> __Method_ConfigureVoltageLimitRange = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureVoltageLimitRange",
        __Marshaller_nidcpower_grpc_ConfigureVoltageLimitRangeRequest,
        __Marshaller_nidcpower_grpc_ConfigureVoltageLimitRangeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse> __Method_CreateAdvancedSequence = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAdvancedSequence",
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceRequest,
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse> __Method_CreateAdvancedSequenceCommitStepWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAdvancedSequenceCommitStepWithChannels",
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceCommitStepWithChannelsRequest,
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceCommitStepWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse> __Method_CreateAdvancedSequenceStep = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAdvancedSequenceStep",
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceStepRequest,
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceStepResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse> __Method_CreateAdvancedSequenceStepWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAdvancedSequenceStepWithChannels",
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceStepWithChannelsRequest,
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceStepWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse> __Method_CreateAdvancedSequenceWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAdvancedSequenceWithChannels",
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceWithChannelsRequest,
        __Marshaller_nidcpower_grpc_CreateAdvancedSequenceWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse> __Method_DeleteAdvancedSequence = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAdvancedSequence",
        __Marshaller_nidcpower_grpc_DeleteAdvancedSequenceRequest,
        __Marshaller_nidcpower_grpc_DeleteAdvancedSequenceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse> __Method_DeleteAdvancedSequenceWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAdvancedSequenceWithChannels",
        __Marshaller_nidcpower_grpc_DeleteAdvancedSequenceWithChannelsRequest,
        __Marshaller_nidcpower_grpc_DeleteAdvancedSequenceWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableRequest, global::NationalInstruments.Grpc.DCPower.DisableResponse> __Method_Disable = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableRequest, global::NationalInstruments.Grpc.DCPower.DisableResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Disable",
        __Marshaller_nidcpower_grpc_DisableRequest,
        __Marshaller_nidcpower_grpc_DisableResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse> __Method_DisablePulseTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisablePulseTrigger",
        __Marshaller_nidcpower_grpc_DisablePulseTriggerRequest,
        __Marshaller_nidcpower_grpc_DisablePulseTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse> __Method_DisablePulseTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisablePulseTriggerWithChannels",
        __Marshaller_nidcpower_grpc_DisablePulseTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_DisablePulseTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse> __Method_DisableSequenceAdvanceTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableSequenceAdvanceTrigger",
        __Marshaller_nidcpower_grpc_DisableSequenceAdvanceTriggerRequest,
        __Marshaller_nidcpower_grpc_DisableSequenceAdvanceTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse> __Method_DisableSequenceAdvanceTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableSequenceAdvanceTriggerWithChannels",
        __Marshaller_nidcpower_grpc_DisableSequenceAdvanceTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_DisableSequenceAdvanceTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse> __Method_DisableShutdownTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableShutdownTriggerWithChannels",
        __Marshaller_nidcpower_grpc_DisableShutdownTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_DisableShutdownTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse> __Method_DisableSourceTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableSourceTrigger",
        __Marshaller_nidcpower_grpc_DisableSourceTriggerRequest,
        __Marshaller_nidcpower_grpc_DisableSourceTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse> __Method_DisableSourceTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableSourceTriggerWithChannels",
        __Marshaller_nidcpower_grpc_DisableSourceTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_DisableSourceTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse> __Method_DisableStartTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableStartTrigger",
        __Marshaller_nidcpower_grpc_DisableStartTriggerRequest,
        __Marshaller_nidcpower_grpc_DisableStartTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse> __Method_DisableStartTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableStartTriggerWithChannels",
        __Marshaller_nidcpower_grpc_DisableStartTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_DisableStartTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest, global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse> __Method_ErrorMessage = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest, global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ErrorMessage",
        __Marshaller_nidcpower_grpc_ErrorMessageRequest,
        __Marshaller_nidcpower_grpc_ErrorMessageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest, global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse> __Method_ErrorQuery = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest, global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ErrorQuery",
        __Marshaller_nidcpower_grpc_ErrorQueryRequest,
        __Marshaller_nidcpower_grpc_ErrorQueryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse> __Method_ExportAttributeConfigurationBuffer = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportAttributeConfigurationBuffer",
        __Marshaller_nidcpower_grpc_ExportAttributeConfigurationBufferRequest,
        __Marshaller_nidcpower_grpc_ExportAttributeConfigurationBufferResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse> __Method_ExportAttributeConfigurationFile = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportAttributeConfigurationFile",
        __Marshaller_nidcpower_grpc_ExportAttributeConfigurationFileRequest,
        __Marshaller_nidcpower_grpc_ExportAttributeConfigurationFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ExportSignalRequest, global::NationalInstruments.Grpc.DCPower.ExportSignalResponse> __Method_ExportSignal = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ExportSignalRequest, global::NationalInstruments.Grpc.DCPower.ExportSignalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportSignal",
        __Marshaller_nidcpower_grpc_ExportSignalRequest,
        __Marshaller_nidcpower_grpc_ExportSignalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse> __Method_ExportSignalWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportSignalWithChannels",
        __Marshaller_nidcpower_grpc_ExportSignalWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ExportSignalWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest, global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse> __Method_FetchMultiple = new grpc::Method<global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest, global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchMultiple",
        __Marshaller_nidcpower_grpc_FetchMultipleRequest,
        __Marshaller_nidcpower_grpc_FetchMultipleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest, global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse> __Method_FetchMultipleLCR = new grpc::Method<global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest, global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchMultipleLCR",
        __Marshaller_nidcpower_grpc_FetchMultipleLCRRequest,
        __Marshaller_nidcpower_grpc_FetchMultipleLCRResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse> __Method_GetAttributeViBoolean = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttributeViBoolean",
        __Marshaller_nidcpower_grpc_GetAttributeViBooleanRequest,
        __Marshaller_nidcpower_grpc_GetAttributeViBooleanResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response> __Method_GetAttributeViInt32 = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttributeViInt32",
        __Marshaller_nidcpower_grpc_GetAttributeViInt32Request,
        __Marshaller_nidcpower_grpc_GetAttributeViInt32Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response> __Method_GetAttributeViInt64 = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttributeViInt64",
        __Marshaller_nidcpower_grpc_GetAttributeViInt64Request,
        __Marshaller_nidcpower_grpc_GetAttributeViInt64Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response> __Method_GetAttributeViReal64 = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttributeViReal64",
        __Marshaller_nidcpower_grpc_GetAttributeViReal64Request,
        __Marshaller_nidcpower_grpc_GetAttributeViReal64Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse> __Method_GetAttributeViSession = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttributeViSession",
        __Marshaller_nidcpower_grpc_GetAttributeViSessionRequest,
        __Marshaller_nidcpower_grpc_GetAttributeViSessionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse> __Method_GetAttributeViString = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttributeViString",
        __Marshaller_nidcpower_grpc_GetAttributeViStringRequest,
        __Marshaller_nidcpower_grpc_GetAttributeViStringResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest, global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse> __Method_GetChannelName = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest, global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetChannelName",
        __Marshaller_nidcpower_grpc_GetChannelNameRequest,
        __Marshaller_nidcpower_grpc_GetChannelNameResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest, global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse> __Method_GetChannelNameFromString = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest, global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetChannelNameFromString",
        __Marshaller_nidcpower_grpc_GetChannelNameFromStringRequest,
        __Marshaller_nidcpower_grpc_GetChannelNameFromStringResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetErrorRequest, global::NationalInstruments.Grpc.DCPower.GetErrorResponse> __Method_GetError = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetErrorRequest, global::NationalInstruments.Grpc.DCPower.GetErrorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetError",
        __Marshaller_nidcpower_grpc_GetErrorRequest,
        __Marshaller_nidcpower_grpc_GetErrorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse> __Method_GetExtCalLastDateAndTime = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExtCalLastDateAndTime",
        __Marshaller_nidcpower_grpc_GetExtCalLastDateAndTimeRequest,
        __Marshaller_nidcpower_grpc_GetExtCalLastDateAndTimeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse> __Method_GetExtCalLastTemp = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExtCalLastTemp",
        __Marshaller_nidcpower_grpc_GetExtCalLastTempRequest,
        __Marshaller_nidcpower_grpc_GetExtCalLastTempResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse> __Method_GetExtCalRecommendedInterval = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExtCalRecommendedInterval",
        __Marshaller_nidcpower_grpc_GetExtCalRecommendedIntervalRequest,
        __Marshaller_nidcpower_grpc_GetExtCalRecommendedIntervalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse> __Method_GetLCRCompensationLastDateAndTime = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLCRCompensationLastDateAndTime",
        __Marshaller_nidcpower_grpc_GetLCRCompensationLastDateAndTimeRequest,
        __Marshaller_nidcpower_grpc_GetLCRCompensationLastDateAndTimeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest, global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse> __Method_GetLCRCustomCableCompensationData = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest, global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLCRCustomCableCompensationData",
        __Marshaller_nidcpower_grpc_GetLCRCustomCableCompensationDataRequest,
        __Marshaller_nidcpower_grpc_GetLCRCustomCableCompensationDataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest, global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse> __Method_GetNextCoercionRecord = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest, global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNextCoercionRecord",
        __Marshaller_nidcpower_grpc_GetNextCoercionRecordRequest,
        __Marshaller_nidcpower_grpc_GetNextCoercionRecordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest, global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse> __Method_GetNextInterchangeWarning = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest, global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNextInterchangeWarning",
        __Marshaller_nidcpower_grpc_GetNextInterchangeWarningRequest,
        __Marshaller_nidcpower_grpc_GetNextInterchangeWarningResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse> __Method_GetSelfCalLastDateAndTime = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSelfCalLastDateAndTime",
        __Marshaller_nidcpower_grpc_GetSelfCalLastDateAndTimeRequest,
        __Marshaller_nidcpower_grpc_GetSelfCalLastDateAndTimeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse> __Method_GetSelfCalLastTemp = new grpc::Method<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSelfCalLastTemp",
        __Marshaller_nidcpower_grpc_GetSelfCalLastTempRequest,
        __Marshaller_nidcpower_grpc_GetSelfCalLastTempResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse> __Method_ImportAttributeConfigurationBuffer = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportAttributeConfigurationBuffer",
        __Marshaller_nidcpower_grpc_ImportAttributeConfigurationBufferRequest,
        __Marshaller_nidcpower_grpc_ImportAttributeConfigurationBufferResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse> __Method_ImportAttributeConfigurationFile = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportAttributeConfigurationFile",
        __Marshaller_nidcpower_grpc_ImportAttributeConfigurationFileRequest,
        __Marshaller_nidcpower_grpc_ImportAttributeConfigurationFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse> __Method_InitializeWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InitializeWithChannels",
        __Marshaller_nidcpower_grpc_InitializeWithChannelsRequest,
        __Marshaller_nidcpower_grpc_InitializeWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse> __Method_InitializeWithIndependentChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InitializeWithIndependentChannels",
        __Marshaller_nidcpower_grpc_InitializeWithIndependentChannelsRequest,
        __Marshaller_nidcpower_grpc_InitializeWithIndependentChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.InitiateRequest, global::NationalInstruments.Grpc.DCPower.InitiateResponse> __Method_Initiate = new grpc::Method<global::NationalInstruments.Grpc.DCPower.InitiateRequest, global::NationalInstruments.Grpc.DCPower.InitiateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Initiate",
        __Marshaller_nidcpower_grpc_InitiateRequest,
        __Marshaller_nidcpower_grpc_InitiateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse> __Method_InitiateWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InitiateWithChannels",
        __Marshaller_nidcpower_grpc_InitiateWithChannelsRequest,
        __Marshaller_nidcpower_grpc_InitiateWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest, global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse> __Method_InvalidateAllAttributes = new grpc::Method<global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest, global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InvalidateAllAttributes",
        __Marshaller_nidcpower_grpc_InvalidateAllAttributesRequest,
        __Marshaller_nidcpower_grpc_InvalidateAllAttributesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.MeasureRequest, global::NationalInstruments.Grpc.DCPower.MeasureResponse> __Method_Measure = new grpc::Method<global::NationalInstruments.Grpc.DCPower.MeasureRequest, global::NationalInstruments.Grpc.DCPower.MeasureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Measure",
        __Marshaller_nidcpower_grpc_MeasureRequest,
        __Marshaller_nidcpower_grpc_MeasureResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest, global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse> __Method_MeasureMultiple = new grpc::Method<global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest, global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MeasureMultiple",
        __Marshaller_nidcpower_grpc_MeasureMultipleRequest,
        __Marshaller_nidcpower_grpc_MeasureMultipleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest, global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse> __Method_MeasureMultipleLCR = new grpc::Method<global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest, global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MeasureMultipleLCR",
        __Marshaller_nidcpower_grpc_MeasureMultipleLCRRequest,
        __Marshaller_nidcpower_grpc_MeasureMultipleLCRResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse> __Method_PerformLCRLoadCompensation = new grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PerformLCRLoadCompensation",
        __Marshaller_nidcpower_grpc_PerformLCRLoadCompensationRequest,
        __Marshaller_nidcpower_grpc_PerformLCRLoadCompensationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse> __Method_PerformLCROpenCompensation = new grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PerformLCROpenCompensation",
        __Marshaller_nidcpower_grpc_PerformLCROpenCompensationRequest,
        __Marshaller_nidcpower_grpc_PerformLCROpenCompensationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse> __Method_PerformLCROpenCustomCableCompensation = new grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PerformLCROpenCustomCableCompensation",
        __Marshaller_nidcpower_grpc_PerformLCROpenCustomCableCompensationRequest,
        __Marshaller_nidcpower_grpc_PerformLCROpenCustomCableCompensationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse> __Method_PerformLCRShortCompensation = new grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PerformLCRShortCompensation",
        __Marshaller_nidcpower_grpc_PerformLCRShortCompensationRequest,
        __Marshaller_nidcpower_grpc_PerformLCRShortCompensationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse> __Method_PerformLCRShortCustomCableCompensation = new grpc::Method<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PerformLCRShortCustomCableCompensation",
        __Marshaller_nidcpower_grpc_PerformLCRShortCustomCableCompensationRequest,
        __Marshaller_nidcpower_grpc_PerformLCRShortCustomCableCompensationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest, global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse> __Method_QueryInCompliance = new grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest, global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryInCompliance",
        __Marshaller_nidcpower_grpc_QueryInComplianceRequest,
        __Marshaller_nidcpower_grpc_QueryInComplianceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest, global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse> __Method_QueryLatchedOutputCutoffState = new grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest, global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryLatchedOutputCutoffState",
        __Marshaller_nidcpower_grpc_QueryLatchedOutputCutoffStateRequest,
        __Marshaller_nidcpower_grpc_QueryLatchedOutputCutoffStateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse> __Method_QueryMaxCurrentLimit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryMaxCurrentLimit",
        __Marshaller_nidcpower_grpc_QueryMaxCurrentLimitRequest,
        __Marshaller_nidcpower_grpc_QueryMaxCurrentLimitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse> __Method_QueryMaxVoltageLevel = new grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryMaxVoltageLevel",
        __Marshaller_nidcpower_grpc_QueryMaxVoltageLevelRequest,
        __Marshaller_nidcpower_grpc_QueryMaxVoltageLevelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse> __Method_QueryMinCurrentLimit = new grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryMinCurrentLimit",
        __Marshaller_nidcpower_grpc_QueryMinCurrentLimitRequest,
        __Marshaller_nidcpower_grpc_QueryMinCurrentLimitResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest, global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse> __Method_QueryOutputState = new grpc::Method<global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest, global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryOutputState",
        __Marshaller_nidcpower_grpc_QueryOutputStateRequest,
        __Marshaller_nidcpower_grpc_QueryOutputStateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest, global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse> __Method_ReadCurrentTemperature = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest, global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadCurrentTemperature",
        __Marshaller_nidcpower_grpc_ReadCurrentTemperatureRequest,
        __Marshaller_nidcpower_grpc_ReadCurrentTemperatureResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetRequest, global::NationalInstruments.Grpc.DCPower.ResetResponse> __Method_Reset = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetRequest, global::NationalInstruments.Grpc.DCPower.ResetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Reset",
        __Marshaller_nidcpower_grpc_ResetRequest,
        __Marshaller_nidcpower_grpc_ResetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest, global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse> __Method_ResetDevice = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest, global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetDevice",
        __Marshaller_nidcpower_grpc_ResetDeviceRequest,
        __Marshaller_nidcpower_grpc_ResetDeviceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest, global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse> __Method_ResetInterchangeCheck = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest, global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetInterchangeCheck",
        __Marshaller_nidcpower_grpc_ResetInterchangeCheckRequest,
        __Marshaller_nidcpower_grpc_ResetInterchangeCheckResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse> __Method_ResetWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetWithChannels",
        __Marshaller_nidcpower_grpc_ResetWithChannelsRequest,
        __Marshaller_nidcpower_grpc_ResetWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest, global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse> __Method_ResetWithDefaults = new grpc::Method<global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest, global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetWithDefaults",
        __Marshaller_nidcpower_grpc_ResetWithDefaultsRequest,
        __Marshaller_nidcpower_grpc_ResetWithDefaultsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest, global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse> __Method_RevisionQuery = new grpc::Method<global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest, global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RevisionQuery",
        __Marshaller_nidcpower_grpc_RevisionQueryRequest,
        __Marshaller_nidcpower_grpc_RevisionQueryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SelfTestRequest, global::NationalInstruments.Grpc.DCPower.SelfTestResponse> __Method_SelfTest = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SelfTestRequest, global::NationalInstruments.Grpc.DCPower.SelfTestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SelfTest",
        __Marshaller_nidcpower_grpc_SelfTestRequest,
        __Marshaller_nidcpower_grpc_SelfTestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse> __Method_SendSoftwareEdgeTrigger = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendSoftwareEdgeTrigger",
        __Marshaller_nidcpower_grpc_SendSoftwareEdgeTriggerRequest,
        __Marshaller_nidcpower_grpc_SendSoftwareEdgeTriggerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse> __Method_SendSoftwareEdgeTriggerWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendSoftwareEdgeTriggerWithChannels",
        __Marshaller_nidcpower_grpc_SendSoftwareEdgeTriggerWithChannelsRequest,
        __Marshaller_nidcpower_grpc_SendSoftwareEdgeTriggerWithChannelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse> __Method_SetAttributeViBoolean = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAttributeViBoolean",
        __Marshaller_nidcpower_grpc_SetAttributeViBooleanRequest,
        __Marshaller_nidcpower_grpc_SetAttributeViBooleanResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response> __Method_SetAttributeViInt32 = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAttributeViInt32",
        __Marshaller_nidcpower_grpc_SetAttributeViInt32Request,
        __Marshaller_nidcpower_grpc_SetAttributeViInt32Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response> __Method_SetAttributeViInt64 = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAttributeViInt64",
        __Marshaller_nidcpower_grpc_SetAttributeViInt64Request,
        __Marshaller_nidcpower_grpc_SetAttributeViInt64Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response> __Method_SetAttributeViReal64 = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAttributeViReal64",
        __Marshaller_nidcpower_grpc_SetAttributeViReal64Request,
        __Marshaller_nidcpower_grpc_SetAttributeViReal64Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse> __Method_SetAttributeViSession = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAttributeViSession",
        __Marshaller_nidcpower_grpc_SetAttributeViSessionRequest,
        __Marshaller_nidcpower_grpc_SetAttributeViSessionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse> __Method_SetAttributeViString = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAttributeViString",
        __Marshaller_nidcpower_grpc_SetAttributeViStringRequest,
        __Marshaller_nidcpower_grpc_SetAttributeViStringResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.SetSequenceRequest, global::NationalInstruments.Grpc.DCPower.SetSequenceResponse> __Method_SetSequence = new grpc::Method<global::NationalInstruments.Grpc.DCPower.SetSequenceRequest, global::NationalInstruments.Grpc.DCPower.SetSequenceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetSequence",
        __Marshaller_nidcpower_grpc_SetSequenceRequest,
        __Marshaller_nidcpower_grpc_SetSequenceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.WaitForEventRequest, global::NationalInstruments.Grpc.DCPower.WaitForEventResponse> __Method_WaitForEvent = new grpc::Method<global::NationalInstruments.Grpc.DCPower.WaitForEventRequest, global::NationalInstruments.Grpc.DCPower.WaitForEventResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "WaitForEvent",
        __Marshaller_nidcpower_grpc_WaitForEventRequest,
        __Marshaller_nidcpower_grpc_WaitForEventResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse> __Method_WaitForEventWithChannels = new grpc::Method<global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "WaitForEventWithChannels",
        __Marshaller_nidcpower_grpc_WaitForEventWithChannelsRequest,
        __Marshaller_nidcpower_grpc_WaitForEventWithChannelsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NationalInstruments.Grpc.DCPower.NidcpowerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NiDCPower</summary>
    [grpc::BindServiceMethod(typeof(NiDCPower), "BindService")]
    public abstract partial class NiDCPowerBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.AbortResponse> Abort(global::NationalInstruments.Grpc.DCPower.AbortRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse> AbortWithChannels(global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse> CalSelfCalibrate(global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ClearErrorResponse> ClearError(global::NationalInstruments.Grpc.DCPower.ClearErrorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse> ClearInterchangeWarnings(global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse> ClearLatchedOutputCutoffState(global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CloseResponse> Close(global::NationalInstruments.Grpc.DCPower.CloseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CommitResponse> Commit(global::NationalInstruments.Grpc.DCPower.CommitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse> CommitWithChannels(global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse> ConfigureApertureTime(global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse> ConfigureAutoZero(global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse> ConfigureCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse> ConfigureCurrentLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse> ConfigureCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse> ConfigureCurrentLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse> ConfigureDigitalEdgeMeasureTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse> ConfigureDigitalEdgeMeasureTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse> ConfigureDigitalEdgePulseTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse> ConfigureDigitalEdgePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse> ConfigureDigitalEdgeSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse> ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse> ConfigureDigitalEdgeShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse> ConfigureDigitalEdgeSourceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse> ConfigureDigitalEdgeSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse> ConfigureDigitalEdgeStartTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse> ConfigureDigitalEdgeStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse> ConfigureLCRCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse> ConfigureOutputEnabled(global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse> ConfigureOutputFunction(global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse> ConfigureOutputResistance(global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse> ConfigureOvp(global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse> ConfigurePowerLineFrequency(global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse> ConfigurePulseBiasCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse> ConfigurePulseBiasCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse> ConfigurePulseBiasVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse> ConfigurePulseBiasVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse> ConfigurePulseCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse> ConfigurePulseCurrentLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse> ConfigurePulseCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse> ConfigurePulseCurrentLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse> ConfigurePulseVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse> ConfigurePulseVoltageLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse> ConfigurePulseVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse> ConfigurePulseVoltageLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse> ConfigureSense(global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse> ConfigureSoftwareEdgeMeasureTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse> ConfigureSoftwareEdgeMeasureTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse> ConfigureSoftwareEdgePulseTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse> ConfigureSoftwareEdgePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse> ConfigureSoftwareEdgeSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse> ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse> ConfigureSoftwareEdgeShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse> ConfigureSoftwareEdgeSourceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse> ConfigureSoftwareEdgeSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse> ConfigureSoftwareEdgeStartTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse> ConfigureSoftwareEdgeStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse> ConfigureSourceMode(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse> ConfigureSourceModeWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse> ConfigureVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse> ConfigureVoltageLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse> ConfigureVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse> ConfigureVoltageLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse> CreateAdvancedSequence(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse> CreateAdvancedSequenceCommitStepWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse> CreateAdvancedSequenceStep(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse> CreateAdvancedSequenceStepWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse> CreateAdvancedSequenceWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse> DeleteAdvancedSequence(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse> DeleteAdvancedSequenceWithChannels(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisableResponse> Disable(global::NationalInstruments.Grpc.DCPower.DisableRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse> DisablePulseTrigger(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse> DisablePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse> DisableSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse> DisableSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse> DisableShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse> DisableSourceTrigger(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse> DisableSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse> DisableStartTrigger(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse> DisableStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse> ErrorMessage(global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse> ErrorQuery(global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse> ExportAttributeConfigurationBuffer(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse> ExportAttributeConfigurationFile(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ExportSignalResponse> ExportSignal(global::NationalInstruments.Grpc.DCPower.ExportSignalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse> ExportSignalWithChannels(global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse> FetchMultiple(global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse> FetchMultipleLCR(global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse> GetAttributeViBoolean(global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response> GetAttributeViInt32(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response> GetAttributeViInt64(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response> GetAttributeViReal64(global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse> GetAttributeViSession(global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse> GetAttributeViString(global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse> GetChannelName(global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse> GetChannelNameFromString(global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetErrorResponse> GetError(global::NationalInstruments.Grpc.DCPower.GetErrorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse> GetExtCalLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse> GetExtCalLastTemp(global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse> GetExtCalRecommendedInterval(global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse> GetLCRCompensationLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse> GetLCRCustomCableCompensationData(global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse> GetNextCoercionRecord(global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse> GetNextInterchangeWarning(global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse> GetSelfCalLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse> GetSelfCalLastTemp(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse> ImportAttributeConfigurationBuffer(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse> ImportAttributeConfigurationFile(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse> InitializeWithChannels(global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse> InitializeWithIndependentChannels(global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.InitiateResponse> Initiate(global::NationalInstruments.Grpc.DCPower.InitiateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse> InitiateWithChannels(global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse> InvalidateAllAttributes(global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.MeasureResponse> Measure(global::NationalInstruments.Grpc.DCPower.MeasureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse> MeasureMultiple(global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse> MeasureMultipleLCR(global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse> PerformLCRLoadCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse> PerformLCROpenCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse> PerformLCROpenCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse> PerformLCRShortCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse> PerformLCRShortCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse> QueryInCompliance(global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse> QueryLatchedOutputCutoffState(global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse> QueryMaxCurrentLimit(global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse> QueryMaxVoltageLevel(global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse> QueryMinCurrentLimit(global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse> QueryOutputState(global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse> ReadCurrentTemperature(global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ResetResponse> Reset(global::NationalInstruments.Grpc.DCPower.ResetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse> ResetDevice(global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse> ResetInterchangeCheck(global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse> ResetWithChannels(global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse> ResetWithDefaults(global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse> RevisionQuery(global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SelfTestResponse> SelfTest(global::NationalInstruments.Grpc.DCPower.SelfTestRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse> SendSoftwareEdgeTrigger(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse> SendSoftwareEdgeTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse> SetAttributeViBoolean(global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response> SetAttributeViInt32(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response> SetAttributeViInt64(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response> SetAttributeViReal64(global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse> SetAttributeViSession(global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse> SetAttributeViString(global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.SetSequenceResponse> SetSequence(global::NationalInstruments.Grpc.DCPower.SetSequenceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.WaitForEventResponse> WaitForEvent(global::NationalInstruments.Grpc.DCPower.WaitForEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse> WaitForEventWithChannels(global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NiDCPower</summary>
    public partial class NiDCPowerClient : grpc::ClientBase<NiDCPowerClient>
    {
      /// <summary>Creates a new client for NiDCPower</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NiDCPowerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NiDCPower that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NiDCPowerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NiDCPowerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NiDCPowerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.AbortResponse Abort(global::NationalInstruments.Grpc.DCPower.AbortRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Abort(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.AbortResponse Abort(global::NationalInstruments.Grpc.DCPower.AbortRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Abort, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.AbortResponse> AbortAsync(global::NationalInstruments.Grpc.DCPower.AbortRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AbortAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.AbortResponse> AbortAsync(global::NationalInstruments.Grpc.DCPower.AbortRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Abort, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse AbortWithChannels(global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AbortWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse AbortWithChannels(global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AbortWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse> AbortWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AbortWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse> AbortWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AbortWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse CalSelfCalibrate(global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CalSelfCalibrate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse CalSelfCalibrate(global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CalSelfCalibrate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse> CalSelfCalibrateAsync(global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CalSelfCalibrateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse> CalSelfCalibrateAsync(global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CalSelfCalibrate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ClearErrorResponse ClearError(global::NationalInstruments.Grpc.DCPower.ClearErrorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearError(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ClearErrorResponse ClearError(global::NationalInstruments.Grpc.DCPower.ClearErrorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClearError, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ClearErrorResponse> ClearErrorAsync(global::NationalInstruments.Grpc.DCPower.ClearErrorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearErrorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ClearErrorResponse> ClearErrorAsync(global::NationalInstruments.Grpc.DCPower.ClearErrorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClearError, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse ClearInterchangeWarnings(global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearInterchangeWarnings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse ClearInterchangeWarnings(global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClearInterchangeWarnings, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse> ClearInterchangeWarningsAsync(global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearInterchangeWarningsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse> ClearInterchangeWarningsAsync(global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClearInterchangeWarnings, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse ClearLatchedOutputCutoffState(global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearLatchedOutputCutoffState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse ClearLatchedOutputCutoffState(global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClearLatchedOutputCutoffState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse> ClearLatchedOutputCutoffStateAsync(global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearLatchedOutputCutoffStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse> ClearLatchedOutputCutoffStateAsync(global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClearLatchedOutputCutoffState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CloseResponse Close(global::NationalInstruments.Grpc.DCPower.CloseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Close(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CloseResponse Close(global::NationalInstruments.Grpc.DCPower.CloseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Close, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CloseResponse> CloseAsync(global::NationalInstruments.Grpc.DCPower.CloseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CloseResponse> CloseAsync(global::NationalInstruments.Grpc.DCPower.CloseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Close, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CommitResponse Commit(global::NationalInstruments.Grpc.DCPower.CommitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Commit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CommitResponse Commit(global::NationalInstruments.Grpc.DCPower.CommitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Commit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CommitResponse> CommitAsync(global::NationalInstruments.Grpc.DCPower.CommitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CommitResponse> CommitAsync(global::NationalInstruments.Grpc.DCPower.CommitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Commit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse CommitWithChannels(global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommitWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse CommitWithChannels(global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CommitWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse> CommitWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommitWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse> CommitWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CommitWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse ConfigureApertureTime(global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureApertureTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse ConfigureApertureTime(global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureApertureTime, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse> ConfigureApertureTimeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureApertureTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse> ConfigureApertureTimeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureApertureTime, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse ConfigureAutoZero(global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureAutoZero(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse ConfigureAutoZero(global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureAutoZero, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse> ConfigureAutoZeroAsync(global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureAutoZeroAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse> ConfigureAutoZeroAsync(global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureAutoZero, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse ConfigureCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureCurrentLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse ConfigureCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureCurrentLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse> ConfigureCurrentLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureCurrentLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse> ConfigureCurrentLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureCurrentLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse ConfigureCurrentLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureCurrentLevelRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse ConfigureCurrentLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureCurrentLevelRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse> ConfigureCurrentLevelRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureCurrentLevelRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse> ConfigureCurrentLevelRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureCurrentLevelRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse ConfigureCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureCurrentLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse ConfigureCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse> ConfigureCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureCurrentLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse> ConfigureCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse ConfigureCurrentLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureCurrentLimitRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse ConfigureCurrentLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureCurrentLimitRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse> ConfigureCurrentLimitRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureCurrentLimitRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse> ConfigureCurrentLimitRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureCurrentLimitRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse ConfigureDigitalEdgeMeasureTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeMeasureTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse ConfigureDigitalEdgeMeasureTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeMeasureTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse> ConfigureDigitalEdgeMeasureTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeMeasureTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse> ConfigureDigitalEdgeMeasureTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeMeasureTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse ConfigureDigitalEdgeMeasureTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeMeasureTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse ConfigureDigitalEdgeMeasureTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeMeasureTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse> ConfigureDigitalEdgeMeasureTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeMeasureTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse> ConfigureDigitalEdgeMeasureTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeMeasureTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse ConfigureDigitalEdgePulseTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgePulseTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse ConfigureDigitalEdgePulseTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgePulseTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse> ConfigureDigitalEdgePulseTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgePulseTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse> ConfigureDigitalEdgePulseTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgePulseTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse ConfigureDigitalEdgePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgePulseTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse ConfigureDigitalEdgePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgePulseTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse> ConfigureDigitalEdgePulseTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgePulseTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse> ConfigureDigitalEdgePulseTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgePulseTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse ConfigureDigitalEdgeSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeSequenceAdvanceTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse ConfigureDigitalEdgeSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeSequenceAdvanceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse> ConfigureDigitalEdgeSequenceAdvanceTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeSequenceAdvanceTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse> ConfigureDigitalEdgeSequenceAdvanceTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeSequenceAdvanceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse> ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse> ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse ConfigureDigitalEdgeShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeShutdownTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse ConfigureDigitalEdgeShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeShutdownTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse> ConfigureDigitalEdgeShutdownTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeShutdownTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse> ConfigureDigitalEdgeShutdownTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeShutdownTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse ConfigureDigitalEdgeSourceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeSourceTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse ConfigureDigitalEdgeSourceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeSourceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse> ConfigureDigitalEdgeSourceTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeSourceTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse> ConfigureDigitalEdgeSourceTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeSourceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse ConfigureDigitalEdgeSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeSourceTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse ConfigureDigitalEdgeSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeSourceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse> ConfigureDigitalEdgeSourceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeSourceTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse> ConfigureDigitalEdgeSourceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeSourceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse ConfigureDigitalEdgeStartTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeStartTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse ConfigureDigitalEdgeStartTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeStartTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse> ConfigureDigitalEdgeStartTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeStartTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse> ConfigureDigitalEdgeStartTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeStartTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse ConfigureDigitalEdgeStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeStartTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse ConfigureDigitalEdgeStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDigitalEdgeStartTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse> ConfigureDigitalEdgeStartTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDigitalEdgeStartTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse> ConfigureDigitalEdgeStartTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDigitalEdgeStartTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse ConfigureLCRCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureLCRCustomCableCompensation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse ConfigureLCRCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureLCRCustomCableCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse> ConfigureLCRCustomCableCompensationAsync(global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureLCRCustomCableCompensationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse> ConfigureLCRCustomCableCompensationAsync(global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureLCRCustomCableCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse ConfigureOutputEnabled(global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureOutputEnabled(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse ConfigureOutputEnabled(global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureOutputEnabled, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse> ConfigureOutputEnabledAsync(global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureOutputEnabledAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse> ConfigureOutputEnabledAsync(global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureOutputEnabled, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse ConfigureOutputFunction(global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureOutputFunction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse ConfigureOutputFunction(global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureOutputFunction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse> ConfigureOutputFunctionAsync(global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureOutputFunctionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse> ConfigureOutputFunctionAsync(global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureOutputFunction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse ConfigureOutputResistance(global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureOutputResistance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse ConfigureOutputResistance(global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureOutputResistance, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse> ConfigureOutputResistanceAsync(global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureOutputResistanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse> ConfigureOutputResistanceAsync(global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureOutputResistance, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse ConfigureOvp(global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureOvp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse ConfigureOvp(global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureOvp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse> ConfigureOvpAsync(global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureOvpAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse> ConfigureOvpAsync(global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureOvp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse ConfigurePowerLineFrequency(global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePowerLineFrequency(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse ConfigurePowerLineFrequency(global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePowerLineFrequency, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse> ConfigurePowerLineFrequencyAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePowerLineFrequencyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse> ConfigurePowerLineFrequencyAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePowerLineFrequency, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse ConfigurePulseBiasCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseBiasCurrentLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse ConfigurePulseBiasCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseBiasCurrentLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse> ConfigurePulseBiasCurrentLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseBiasCurrentLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse> ConfigurePulseBiasCurrentLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseBiasCurrentLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse ConfigurePulseBiasCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseBiasCurrentLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse ConfigurePulseBiasCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseBiasCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse> ConfigurePulseBiasCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseBiasCurrentLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse> ConfigurePulseBiasCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseBiasCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse ConfigurePulseBiasVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseBiasVoltageLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse ConfigurePulseBiasVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseBiasVoltageLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse> ConfigurePulseBiasVoltageLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseBiasVoltageLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse> ConfigurePulseBiasVoltageLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseBiasVoltageLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse ConfigurePulseBiasVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseBiasVoltageLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse ConfigurePulseBiasVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseBiasVoltageLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse> ConfigurePulseBiasVoltageLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseBiasVoltageLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse> ConfigurePulseBiasVoltageLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseBiasVoltageLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse ConfigurePulseCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseCurrentLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse ConfigurePulseCurrentLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseCurrentLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse> ConfigurePulseCurrentLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseCurrentLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse> ConfigurePulseCurrentLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseCurrentLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse ConfigurePulseCurrentLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseCurrentLevelRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse ConfigurePulseCurrentLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseCurrentLevelRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse> ConfigurePulseCurrentLevelRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseCurrentLevelRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse> ConfigurePulseCurrentLevelRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseCurrentLevelRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse ConfigurePulseCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseCurrentLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse ConfigurePulseCurrentLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse> ConfigurePulseCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseCurrentLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse> ConfigurePulseCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse ConfigurePulseCurrentLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseCurrentLimitRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse ConfigurePulseCurrentLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseCurrentLimitRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse> ConfigurePulseCurrentLimitRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseCurrentLimitRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse> ConfigurePulseCurrentLimitRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseCurrentLimitRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse ConfigurePulseVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseVoltageLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse ConfigurePulseVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseVoltageLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse> ConfigurePulseVoltageLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseVoltageLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse> ConfigurePulseVoltageLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseVoltageLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse ConfigurePulseVoltageLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseVoltageLevelRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse ConfigurePulseVoltageLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseVoltageLevelRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse> ConfigurePulseVoltageLevelRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseVoltageLevelRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse> ConfigurePulseVoltageLevelRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseVoltageLevelRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse ConfigurePulseVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseVoltageLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse ConfigurePulseVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseVoltageLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse> ConfigurePulseVoltageLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseVoltageLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse> ConfigurePulseVoltageLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseVoltageLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse ConfigurePulseVoltageLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseVoltageLimitRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse ConfigurePulseVoltageLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigurePulseVoltageLimitRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse> ConfigurePulseVoltageLimitRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigurePulseVoltageLimitRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse> ConfigurePulseVoltageLimitRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigurePulseVoltageLimitRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse ConfigureSense(global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSense(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse ConfigureSense(global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSense, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse> ConfigureSenseAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSenseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse> ConfigureSenseAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSense, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse ConfigureSoftwareEdgeMeasureTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeMeasureTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse ConfigureSoftwareEdgeMeasureTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeMeasureTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse> ConfigureSoftwareEdgeMeasureTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeMeasureTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse> ConfigureSoftwareEdgeMeasureTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeMeasureTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse ConfigureSoftwareEdgeMeasureTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeMeasureTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse ConfigureSoftwareEdgeMeasureTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeMeasureTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse> ConfigureSoftwareEdgeMeasureTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeMeasureTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse> ConfigureSoftwareEdgeMeasureTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeMeasureTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse ConfigureSoftwareEdgePulseTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgePulseTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse ConfigureSoftwareEdgePulseTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgePulseTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse> ConfigureSoftwareEdgePulseTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgePulseTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse> ConfigureSoftwareEdgePulseTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgePulseTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse ConfigureSoftwareEdgePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgePulseTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse ConfigureSoftwareEdgePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgePulseTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse> ConfigureSoftwareEdgePulseTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgePulseTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse> ConfigureSoftwareEdgePulseTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgePulseTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse ConfigureSoftwareEdgeSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeSequenceAdvanceTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse ConfigureSoftwareEdgeSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeSequenceAdvanceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse> ConfigureSoftwareEdgeSequenceAdvanceTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeSequenceAdvanceTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse> ConfigureSoftwareEdgeSequenceAdvanceTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeSequenceAdvanceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse> ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse> ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse ConfigureSoftwareEdgeShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeShutdownTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse ConfigureSoftwareEdgeShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeShutdownTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse> ConfigureSoftwareEdgeShutdownTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeShutdownTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse> ConfigureSoftwareEdgeShutdownTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeShutdownTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse ConfigureSoftwareEdgeSourceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeSourceTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse ConfigureSoftwareEdgeSourceTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeSourceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse> ConfigureSoftwareEdgeSourceTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeSourceTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse> ConfigureSoftwareEdgeSourceTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeSourceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse ConfigureSoftwareEdgeSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeSourceTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse ConfigureSoftwareEdgeSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeSourceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse> ConfigureSoftwareEdgeSourceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeSourceTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse> ConfigureSoftwareEdgeSourceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeSourceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse ConfigureSoftwareEdgeStartTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeStartTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse ConfigureSoftwareEdgeStartTrigger(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeStartTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse> ConfigureSoftwareEdgeStartTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeStartTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse> ConfigureSoftwareEdgeStartTriggerAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeStartTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse ConfigureSoftwareEdgeStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeStartTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse ConfigureSoftwareEdgeStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSoftwareEdgeStartTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse> ConfigureSoftwareEdgeStartTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSoftwareEdgeStartTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse> ConfigureSoftwareEdgeStartTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSoftwareEdgeStartTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse ConfigureSourceMode(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSourceMode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse ConfigureSourceMode(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSourceMode, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse> ConfigureSourceModeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSourceModeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse> ConfigureSourceModeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSourceMode, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse ConfigureSourceModeWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSourceModeWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse ConfigureSourceModeWithChannels(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureSourceModeWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse> ConfigureSourceModeWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureSourceModeWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse> ConfigureSourceModeWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureSourceModeWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse ConfigureVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureVoltageLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse ConfigureVoltageLevel(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureVoltageLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse> ConfigureVoltageLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureVoltageLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse> ConfigureVoltageLevelAsync(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureVoltageLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse ConfigureVoltageLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureVoltageLevelRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse ConfigureVoltageLevelRange(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureVoltageLevelRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse> ConfigureVoltageLevelRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureVoltageLevelRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse> ConfigureVoltageLevelRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureVoltageLevelRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse ConfigureVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureVoltageLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse ConfigureVoltageLimit(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureVoltageLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse> ConfigureVoltageLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureVoltageLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse> ConfigureVoltageLimitAsync(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureVoltageLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse ConfigureVoltageLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureVoltageLimitRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse ConfigureVoltageLimitRange(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureVoltageLimitRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse> ConfigureVoltageLimitRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureVoltageLimitRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse> ConfigureVoltageLimitRangeAsync(global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureVoltageLimitRange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse CreateAdvancedSequence(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequence(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse CreateAdvancedSequence(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAdvancedSequence, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse> CreateAdvancedSequenceAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse> CreateAdvancedSequenceAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAdvancedSequence, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse CreateAdvancedSequenceCommitStepWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceCommitStepWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse CreateAdvancedSequenceCommitStepWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAdvancedSequenceCommitStepWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse> CreateAdvancedSequenceCommitStepWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceCommitStepWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse> CreateAdvancedSequenceCommitStepWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAdvancedSequenceCommitStepWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse CreateAdvancedSequenceStep(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceStep(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse CreateAdvancedSequenceStep(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAdvancedSequenceStep, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse> CreateAdvancedSequenceStepAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceStepAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse> CreateAdvancedSequenceStepAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAdvancedSequenceStep, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse CreateAdvancedSequenceStepWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceStepWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse CreateAdvancedSequenceStepWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAdvancedSequenceStepWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse> CreateAdvancedSequenceStepWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceStepWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse> CreateAdvancedSequenceStepWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAdvancedSequenceStepWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse CreateAdvancedSequenceWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse CreateAdvancedSequenceWithChannels(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAdvancedSequenceWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse> CreateAdvancedSequenceWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdvancedSequenceWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse> CreateAdvancedSequenceWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAdvancedSequenceWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse DeleteAdvancedSequence(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAdvancedSequence(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse DeleteAdvancedSequence(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAdvancedSequence, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse> DeleteAdvancedSequenceAsync(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAdvancedSequenceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse> DeleteAdvancedSequenceAsync(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAdvancedSequence, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse DeleteAdvancedSequenceWithChannels(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAdvancedSequenceWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse DeleteAdvancedSequenceWithChannels(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAdvancedSequenceWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse> DeleteAdvancedSequenceWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAdvancedSequenceWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse> DeleteAdvancedSequenceWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAdvancedSequenceWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableResponse Disable(global::NationalInstruments.Grpc.DCPower.DisableRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Disable(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableResponse Disable(global::NationalInstruments.Grpc.DCPower.DisableRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Disable, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableResponse> DisableAsync(global::NationalInstruments.Grpc.DCPower.DisableRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableResponse> DisableAsync(global::NationalInstruments.Grpc.DCPower.DisableRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Disable, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse DisablePulseTrigger(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisablePulseTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse DisablePulseTrigger(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisablePulseTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse> DisablePulseTriggerAsync(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisablePulseTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse> DisablePulseTriggerAsync(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisablePulseTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse DisablePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisablePulseTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse DisablePulseTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisablePulseTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse> DisablePulseTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisablePulseTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse> DisablePulseTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisablePulseTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse DisableSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSequenceAdvanceTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse DisableSequenceAdvanceTrigger(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableSequenceAdvanceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse> DisableSequenceAdvanceTriggerAsync(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSequenceAdvanceTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse> DisableSequenceAdvanceTriggerAsync(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableSequenceAdvanceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse DisableSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSequenceAdvanceTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse DisableSequenceAdvanceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableSequenceAdvanceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse> DisableSequenceAdvanceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSequenceAdvanceTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse> DisableSequenceAdvanceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableSequenceAdvanceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse DisableShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableShutdownTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse DisableShutdownTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableShutdownTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse> DisableShutdownTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableShutdownTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse> DisableShutdownTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableShutdownTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse DisableSourceTrigger(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSourceTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse DisableSourceTrigger(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableSourceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse> DisableSourceTriggerAsync(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSourceTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse> DisableSourceTriggerAsync(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableSourceTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse DisableSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSourceTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse DisableSourceTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableSourceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse> DisableSourceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSourceTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse> DisableSourceTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableSourceTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse DisableStartTrigger(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableStartTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse DisableStartTrigger(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableStartTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse> DisableStartTriggerAsync(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableStartTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse> DisableStartTriggerAsync(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableStartTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse DisableStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableStartTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse DisableStartTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableStartTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse> DisableStartTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableStartTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse> DisableStartTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableStartTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse ErrorMessage(global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ErrorMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse ErrorMessage(global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ErrorMessage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse> ErrorMessageAsync(global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ErrorMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse> ErrorMessageAsync(global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ErrorMessage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse ErrorQuery(global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ErrorQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse ErrorQuery(global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ErrorQuery, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse> ErrorQueryAsync(global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ErrorQueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse> ErrorQueryAsync(global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ErrorQuery, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse ExportAttributeConfigurationBuffer(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportAttributeConfigurationBuffer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse ExportAttributeConfigurationBuffer(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportAttributeConfigurationBuffer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse> ExportAttributeConfigurationBufferAsync(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportAttributeConfigurationBufferAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse> ExportAttributeConfigurationBufferAsync(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportAttributeConfigurationBuffer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse ExportAttributeConfigurationFile(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportAttributeConfigurationFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse ExportAttributeConfigurationFile(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportAttributeConfigurationFile, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse> ExportAttributeConfigurationFileAsync(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportAttributeConfigurationFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse> ExportAttributeConfigurationFileAsync(global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportAttributeConfigurationFile, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ExportSignalResponse ExportSignal(global::NationalInstruments.Grpc.DCPower.ExportSignalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportSignal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ExportSignalResponse ExportSignal(global::NationalInstruments.Grpc.DCPower.ExportSignalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportSignal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ExportSignalResponse> ExportSignalAsync(global::NationalInstruments.Grpc.DCPower.ExportSignalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportSignalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ExportSignalResponse> ExportSignalAsync(global::NationalInstruments.Grpc.DCPower.ExportSignalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportSignal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse ExportSignalWithChannels(global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportSignalWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse ExportSignalWithChannels(global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportSignalWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse> ExportSignalWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportSignalWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse> ExportSignalWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportSignalWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse FetchMultiple(global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchMultiple(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse FetchMultiple(global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchMultiple, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse> FetchMultipleAsync(global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchMultipleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse> FetchMultipleAsync(global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchMultiple, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse FetchMultipleLCR(global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchMultipleLCR(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse FetchMultipleLCR(global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchMultipleLCR, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse> FetchMultipleLCRAsync(global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchMultipleLCRAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse> FetchMultipleLCRAsync(global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchMultipleLCR, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse GetAttributeViBoolean(global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViBoolean(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse GetAttributeViBoolean(global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttributeViBoolean, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse> GetAttributeViBooleanAsync(global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViBooleanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse> GetAttributeViBooleanAsync(global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttributeViBoolean, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response GetAttributeViInt32(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViInt32(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response GetAttributeViInt32(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttributeViInt32, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response> GetAttributeViInt32Async(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViInt32Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response> GetAttributeViInt32Async(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttributeViInt32, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response GetAttributeViInt64(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViInt64(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response GetAttributeViInt64(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttributeViInt64, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response> GetAttributeViInt64Async(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViInt64Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response> GetAttributeViInt64Async(global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttributeViInt64, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response GetAttributeViReal64(global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViReal64(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response GetAttributeViReal64(global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttributeViReal64, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response> GetAttributeViReal64Async(global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViReal64Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response> GetAttributeViReal64Async(global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttributeViReal64, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse GetAttributeViSession(global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse GetAttributeViSession(global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttributeViSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse> GetAttributeViSessionAsync(global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse> GetAttributeViSessionAsync(global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttributeViSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse GetAttributeViString(global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViString(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse GetAttributeViString(global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttributeViString, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse> GetAttributeViStringAsync(global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeViStringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse> GetAttributeViStringAsync(global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttributeViString, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse GetChannelName(global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse GetChannelName(global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetChannelName, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse> GetChannelNameAsync(global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse> GetChannelNameAsync(global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetChannelName, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse GetChannelNameFromString(global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelNameFromString(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse GetChannelNameFromString(global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetChannelNameFromString, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse> GetChannelNameFromStringAsync(global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelNameFromStringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse> GetChannelNameFromStringAsync(global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetChannelNameFromString, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetErrorResponse GetError(global::NationalInstruments.Grpc.DCPower.GetErrorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetError(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetErrorResponse GetError(global::NationalInstruments.Grpc.DCPower.GetErrorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetError, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetErrorResponse> GetErrorAsync(global::NationalInstruments.Grpc.DCPower.GetErrorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetErrorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetErrorResponse> GetErrorAsync(global::NationalInstruments.Grpc.DCPower.GetErrorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetError, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse GetExtCalLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExtCalLastDateAndTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse GetExtCalLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExtCalLastDateAndTime, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse> GetExtCalLastDateAndTimeAsync(global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExtCalLastDateAndTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse> GetExtCalLastDateAndTimeAsync(global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExtCalLastDateAndTime, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse GetExtCalLastTemp(global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExtCalLastTemp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse GetExtCalLastTemp(global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExtCalLastTemp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse> GetExtCalLastTempAsync(global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExtCalLastTempAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse> GetExtCalLastTempAsync(global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExtCalLastTemp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse GetExtCalRecommendedInterval(global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExtCalRecommendedInterval(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse GetExtCalRecommendedInterval(global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExtCalRecommendedInterval, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse> GetExtCalRecommendedIntervalAsync(global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExtCalRecommendedIntervalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse> GetExtCalRecommendedIntervalAsync(global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExtCalRecommendedInterval, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse GetLCRCompensationLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLCRCompensationLastDateAndTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse GetLCRCompensationLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLCRCompensationLastDateAndTime, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse> GetLCRCompensationLastDateAndTimeAsync(global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLCRCompensationLastDateAndTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse> GetLCRCompensationLastDateAndTimeAsync(global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLCRCompensationLastDateAndTime, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse GetLCRCustomCableCompensationData(global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLCRCustomCableCompensationData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse GetLCRCustomCableCompensationData(global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLCRCustomCableCompensationData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse> GetLCRCustomCableCompensationDataAsync(global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLCRCustomCableCompensationDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse> GetLCRCustomCableCompensationDataAsync(global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLCRCustomCableCompensationData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse GetNextCoercionRecord(global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNextCoercionRecord(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse GetNextCoercionRecord(global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNextCoercionRecord, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse> GetNextCoercionRecordAsync(global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNextCoercionRecordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse> GetNextCoercionRecordAsync(global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNextCoercionRecord, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse GetNextInterchangeWarning(global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNextInterchangeWarning(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse GetNextInterchangeWarning(global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNextInterchangeWarning, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse> GetNextInterchangeWarningAsync(global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNextInterchangeWarningAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse> GetNextInterchangeWarningAsync(global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNextInterchangeWarning, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse GetSelfCalLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSelfCalLastDateAndTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse GetSelfCalLastDateAndTime(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSelfCalLastDateAndTime, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse> GetSelfCalLastDateAndTimeAsync(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSelfCalLastDateAndTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse> GetSelfCalLastDateAndTimeAsync(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSelfCalLastDateAndTime, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse GetSelfCalLastTemp(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSelfCalLastTemp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse GetSelfCalLastTemp(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSelfCalLastTemp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse> GetSelfCalLastTempAsync(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSelfCalLastTempAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse> GetSelfCalLastTempAsync(global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSelfCalLastTemp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse ImportAttributeConfigurationBuffer(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportAttributeConfigurationBuffer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse ImportAttributeConfigurationBuffer(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportAttributeConfigurationBuffer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse> ImportAttributeConfigurationBufferAsync(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportAttributeConfigurationBufferAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse> ImportAttributeConfigurationBufferAsync(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportAttributeConfigurationBuffer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse ImportAttributeConfigurationFile(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportAttributeConfigurationFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse ImportAttributeConfigurationFile(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportAttributeConfigurationFile, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse> ImportAttributeConfigurationFileAsync(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportAttributeConfigurationFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse> ImportAttributeConfigurationFileAsync(global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportAttributeConfigurationFile, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse InitializeWithChannels(global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse InitializeWithChannels(global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InitializeWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse> InitializeWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse> InitializeWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InitializeWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse InitializeWithIndependentChannels(global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeWithIndependentChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse InitializeWithIndependentChannels(global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InitializeWithIndependentChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse> InitializeWithIndependentChannelsAsync(global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeWithIndependentChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse> InitializeWithIndependentChannelsAsync(global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InitializeWithIndependentChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InitiateResponse Initiate(global::NationalInstruments.Grpc.DCPower.InitiateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Initiate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InitiateResponse Initiate(global::NationalInstruments.Grpc.DCPower.InitiateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Initiate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InitiateResponse> InitiateAsync(global::NationalInstruments.Grpc.DCPower.InitiateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitiateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InitiateResponse> InitiateAsync(global::NationalInstruments.Grpc.DCPower.InitiateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Initiate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse InitiateWithChannels(global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitiateWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse InitiateWithChannels(global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InitiateWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse> InitiateWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitiateWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse> InitiateWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InitiateWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse InvalidateAllAttributes(global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InvalidateAllAttributes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse InvalidateAllAttributes(global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InvalidateAllAttributes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse> InvalidateAllAttributesAsync(global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InvalidateAllAttributesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse> InvalidateAllAttributesAsync(global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InvalidateAllAttributes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.MeasureResponse Measure(global::NationalInstruments.Grpc.DCPower.MeasureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Measure(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.MeasureResponse Measure(global::NationalInstruments.Grpc.DCPower.MeasureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Measure, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.MeasureResponse> MeasureAsync(global::NationalInstruments.Grpc.DCPower.MeasureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MeasureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.MeasureResponse> MeasureAsync(global::NationalInstruments.Grpc.DCPower.MeasureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Measure, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse MeasureMultiple(global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MeasureMultiple(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse MeasureMultiple(global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MeasureMultiple, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse> MeasureMultipleAsync(global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MeasureMultipleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse> MeasureMultipleAsync(global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MeasureMultiple, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse MeasureMultipleLCR(global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MeasureMultipleLCR(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse MeasureMultipleLCR(global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MeasureMultipleLCR, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse> MeasureMultipleLCRAsync(global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MeasureMultipleLCRAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse> MeasureMultipleLCRAsync(global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MeasureMultipleLCR, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse PerformLCRLoadCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCRLoadCompensation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse PerformLCRLoadCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PerformLCRLoadCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse> PerformLCRLoadCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCRLoadCompensationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse> PerformLCRLoadCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PerformLCRLoadCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse PerformLCROpenCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCROpenCompensation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse PerformLCROpenCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PerformLCROpenCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse> PerformLCROpenCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCROpenCompensationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse> PerformLCROpenCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PerformLCROpenCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse PerformLCROpenCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCROpenCustomCableCompensation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse PerformLCROpenCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PerformLCROpenCustomCableCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse> PerformLCROpenCustomCableCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCROpenCustomCableCompensationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse> PerformLCROpenCustomCableCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PerformLCROpenCustomCableCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse PerformLCRShortCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCRShortCompensation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse PerformLCRShortCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PerformLCRShortCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse> PerformLCRShortCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCRShortCompensationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse> PerformLCRShortCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PerformLCRShortCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse PerformLCRShortCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCRShortCustomCableCompensation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse PerformLCRShortCustomCableCompensation(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PerformLCRShortCustomCableCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse> PerformLCRShortCustomCableCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformLCRShortCustomCableCompensationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse> PerformLCRShortCustomCableCompensationAsync(global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PerformLCRShortCustomCableCompensation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse QueryInCompliance(global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryInCompliance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse QueryInCompliance(global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryInCompliance, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse> QueryInComplianceAsync(global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryInComplianceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse> QueryInComplianceAsync(global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryInCompliance, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse QueryLatchedOutputCutoffState(global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryLatchedOutputCutoffState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse QueryLatchedOutputCutoffState(global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryLatchedOutputCutoffState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse> QueryLatchedOutputCutoffStateAsync(global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryLatchedOutputCutoffStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse> QueryLatchedOutputCutoffStateAsync(global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryLatchedOutputCutoffState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse QueryMaxCurrentLimit(global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryMaxCurrentLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse QueryMaxCurrentLimit(global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryMaxCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse> QueryMaxCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryMaxCurrentLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse> QueryMaxCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryMaxCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse QueryMaxVoltageLevel(global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryMaxVoltageLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse QueryMaxVoltageLevel(global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryMaxVoltageLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse> QueryMaxVoltageLevelAsync(global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryMaxVoltageLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse> QueryMaxVoltageLevelAsync(global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryMaxVoltageLevel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse QueryMinCurrentLimit(global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryMinCurrentLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse QueryMinCurrentLimit(global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryMinCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse> QueryMinCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryMinCurrentLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse> QueryMinCurrentLimitAsync(global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryMinCurrentLimit, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse QueryOutputState(global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryOutputState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse QueryOutputState(global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryOutputState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse> QueryOutputStateAsync(global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryOutputStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse> QueryOutputStateAsync(global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryOutputState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse ReadCurrentTemperature(global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadCurrentTemperature(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse ReadCurrentTemperature(global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadCurrentTemperature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse> ReadCurrentTemperatureAsync(global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadCurrentTemperatureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse> ReadCurrentTemperatureAsync(global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadCurrentTemperature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetResponse Reset(global::NationalInstruments.Grpc.DCPower.ResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Reset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetResponse Reset(global::NationalInstruments.Grpc.DCPower.ResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Reset, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetResponse> ResetAsync(global::NationalInstruments.Grpc.DCPower.ResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetResponse> ResetAsync(global::NationalInstruments.Grpc.DCPower.ResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Reset, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse ResetDevice(global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse ResetDevice(global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetDevice, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse> ResetDeviceAsync(global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse> ResetDeviceAsync(global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetDevice, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse ResetInterchangeCheck(global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetInterchangeCheck(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse ResetInterchangeCheck(global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetInterchangeCheck, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse> ResetInterchangeCheckAsync(global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetInterchangeCheckAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse> ResetInterchangeCheckAsync(global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetInterchangeCheck, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse ResetWithChannels(global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse ResetWithChannels(global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse> ResetWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse> ResetWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse ResetWithDefaults(global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetWithDefaults(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse ResetWithDefaults(global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetWithDefaults, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse> ResetWithDefaultsAsync(global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetWithDefaultsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse> ResetWithDefaultsAsync(global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetWithDefaults, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse RevisionQuery(global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RevisionQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse RevisionQuery(global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RevisionQuery, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse> RevisionQueryAsync(global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RevisionQueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse> RevisionQueryAsync(global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RevisionQuery, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SelfTestResponse SelfTest(global::NationalInstruments.Grpc.DCPower.SelfTestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelfTest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SelfTestResponse SelfTest(global::NationalInstruments.Grpc.DCPower.SelfTestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SelfTest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SelfTestResponse> SelfTestAsync(global::NationalInstruments.Grpc.DCPower.SelfTestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelfTestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SelfTestResponse> SelfTestAsync(global::NationalInstruments.Grpc.DCPower.SelfTestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SelfTest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse SendSoftwareEdgeTrigger(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendSoftwareEdgeTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse SendSoftwareEdgeTrigger(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendSoftwareEdgeTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse> SendSoftwareEdgeTriggerAsync(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendSoftwareEdgeTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse> SendSoftwareEdgeTriggerAsync(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendSoftwareEdgeTrigger, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse SendSoftwareEdgeTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendSoftwareEdgeTriggerWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse SendSoftwareEdgeTriggerWithChannels(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendSoftwareEdgeTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse> SendSoftwareEdgeTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendSoftwareEdgeTriggerWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse> SendSoftwareEdgeTriggerWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendSoftwareEdgeTriggerWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse SetAttributeViBoolean(global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViBoolean(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse SetAttributeViBoolean(global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAttributeViBoolean, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse> SetAttributeViBooleanAsync(global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViBooleanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse> SetAttributeViBooleanAsync(global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAttributeViBoolean, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response SetAttributeViInt32(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViInt32(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response SetAttributeViInt32(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAttributeViInt32, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response> SetAttributeViInt32Async(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViInt32Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response> SetAttributeViInt32Async(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAttributeViInt32, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response SetAttributeViInt64(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViInt64(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response SetAttributeViInt64(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAttributeViInt64, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response> SetAttributeViInt64Async(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViInt64Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response> SetAttributeViInt64Async(global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAttributeViInt64, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response SetAttributeViReal64(global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViReal64(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response SetAttributeViReal64(global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAttributeViReal64, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response> SetAttributeViReal64Async(global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViReal64Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response> SetAttributeViReal64Async(global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAttributeViReal64, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse SetAttributeViSession(global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse SetAttributeViSession(global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAttributeViSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse> SetAttributeViSessionAsync(global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse> SetAttributeViSessionAsync(global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAttributeViSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse SetAttributeViString(global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViString(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse SetAttributeViString(global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAttributeViString, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse> SetAttributeViStringAsync(global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAttributeViStringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse> SetAttributeViStringAsync(global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAttributeViString, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetSequenceResponse SetSequence(global::NationalInstruments.Grpc.DCPower.SetSequenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSequence(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.SetSequenceResponse SetSequence(global::NationalInstruments.Grpc.DCPower.SetSequenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetSequence, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetSequenceResponse> SetSequenceAsync(global::NationalInstruments.Grpc.DCPower.SetSequenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSequenceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.SetSequenceResponse> SetSequenceAsync(global::NationalInstruments.Grpc.DCPower.SetSequenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetSequence, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.WaitForEventResponse WaitForEvent(global::NationalInstruments.Grpc.DCPower.WaitForEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WaitForEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.WaitForEventResponse WaitForEvent(global::NationalInstruments.Grpc.DCPower.WaitForEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_WaitForEvent, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.WaitForEventResponse> WaitForEventAsync(global::NationalInstruments.Grpc.DCPower.WaitForEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WaitForEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.WaitForEventResponse> WaitForEventAsync(global::NationalInstruments.Grpc.DCPower.WaitForEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_WaitForEvent, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse WaitForEventWithChannels(global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WaitForEventWithChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse WaitForEventWithChannels(global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_WaitForEventWithChannels, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse> WaitForEventWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WaitForEventWithChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse> WaitForEventWithChannelsAsync(global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_WaitForEventWithChannels, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override NiDCPowerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NiDCPowerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NiDCPowerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Abort, serviceImpl.Abort)
          .AddMethod(__Method_AbortWithChannels, serviceImpl.AbortWithChannels)
          .AddMethod(__Method_CalSelfCalibrate, serviceImpl.CalSelfCalibrate)
          .AddMethod(__Method_ClearError, serviceImpl.ClearError)
          .AddMethod(__Method_ClearInterchangeWarnings, serviceImpl.ClearInterchangeWarnings)
          .AddMethod(__Method_ClearLatchedOutputCutoffState, serviceImpl.ClearLatchedOutputCutoffState)
          .AddMethod(__Method_Close, serviceImpl.Close)
          .AddMethod(__Method_Commit, serviceImpl.Commit)
          .AddMethod(__Method_CommitWithChannels, serviceImpl.CommitWithChannels)
          .AddMethod(__Method_ConfigureApertureTime, serviceImpl.ConfigureApertureTime)
          .AddMethod(__Method_ConfigureAutoZero, serviceImpl.ConfigureAutoZero)
          .AddMethod(__Method_ConfigureCurrentLevel, serviceImpl.ConfigureCurrentLevel)
          .AddMethod(__Method_ConfigureCurrentLevelRange, serviceImpl.ConfigureCurrentLevelRange)
          .AddMethod(__Method_ConfigureCurrentLimit, serviceImpl.ConfigureCurrentLimit)
          .AddMethod(__Method_ConfigureCurrentLimitRange, serviceImpl.ConfigureCurrentLimitRange)
          .AddMethod(__Method_ConfigureDigitalEdgeMeasureTrigger, serviceImpl.ConfigureDigitalEdgeMeasureTrigger)
          .AddMethod(__Method_ConfigureDigitalEdgeMeasureTriggerWithChannels, serviceImpl.ConfigureDigitalEdgeMeasureTriggerWithChannels)
          .AddMethod(__Method_ConfigureDigitalEdgePulseTrigger, serviceImpl.ConfigureDigitalEdgePulseTrigger)
          .AddMethod(__Method_ConfigureDigitalEdgePulseTriggerWithChannels, serviceImpl.ConfigureDigitalEdgePulseTriggerWithChannels)
          .AddMethod(__Method_ConfigureDigitalEdgeSequenceAdvanceTrigger, serviceImpl.ConfigureDigitalEdgeSequenceAdvanceTrigger)
          .AddMethod(__Method_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels, serviceImpl.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels)
          .AddMethod(__Method_ConfigureDigitalEdgeShutdownTriggerWithChannels, serviceImpl.ConfigureDigitalEdgeShutdownTriggerWithChannels)
          .AddMethod(__Method_ConfigureDigitalEdgeSourceTrigger, serviceImpl.ConfigureDigitalEdgeSourceTrigger)
          .AddMethod(__Method_ConfigureDigitalEdgeSourceTriggerWithChannels, serviceImpl.ConfigureDigitalEdgeSourceTriggerWithChannels)
          .AddMethod(__Method_ConfigureDigitalEdgeStartTrigger, serviceImpl.ConfigureDigitalEdgeStartTrigger)
          .AddMethod(__Method_ConfigureDigitalEdgeStartTriggerWithChannels, serviceImpl.ConfigureDigitalEdgeStartTriggerWithChannels)
          .AddMethod(__Method_ConfigureLCRCustomCableCompensation, serviceImpl.ConfigureLCRCustomCableCompensation)
          .AddMethod(__Method_ConfigureOutputEnabled, serviceImpl.ConfigureOutputEnabled)
          .AddMethod(__Method_ConfigureOutputFunction, serviceImpl.ConfigureOutputFunction)
          .AddMethod(__Method_ConfigureOutputResistance, serviceImpl.ConfigureOutputResistance)
          .AddMethod(__Method_ConfigureOvp, serviceImpl.ConfigureOvp)
          .AddMethod(__Method_ConfigurePowerLineFrequency, serviceImpl.ConfigurePowerLineFrequency)
          .AddMethod(__Method_ConfigurePulseBiasCurrentLevel, serviceImpl.ConfigurePulseBiasCurrentLevel)
          .AddMethod(__Method_ConfigurePulseBiasCurrentLimit, serviceImpl.ConfigurePulseBiasCurrentLimit)
          .AddMethod(__Method_ConfigurePulseBiasVoltageLevel, serviceImpl.ConfigurePulseBiasVoltageLevel)
          .AddMethod(__Method_ConfigurePulseBiasVoltageLimit, serviceImpl.ConfigurePulseBiasVoltageLimit)
          .AddMethod(__Method_ConfigurePulseCurrentLevel, serviceImpl.ConfigurePulseCurrentLevel)
          .AddMethod(__Method_ConfigurePulseCurrentLevelRange, serviceImpl.ConfigurePulseCurrentLevelRange)
          .AddMethod(__Method_ConfigurePulseCurrentLimit, serviceImpl.ConfigurePulseCurrentLimit)
          .AddMethod(__Method_ConfigurePulseCurrentLimitRange, serviceImpl.ConfigurePulseCurrentLimitRange)
          .AddMethod(__Method_ConfigurePulseVoltageLevel, serviceImpl.ConfigurePulseVoltageLevel)
          .AddMethod(__Method_ConfigurePulseVoltageLevelRange, serviceImpl.ConfigurePulseVoltageLevelRange)
          .AddMethod(__Method_ConfigurePulseVoltageLimit, serviceImpl.ConfigurePulseVoltageLimit)
          .AddMethod(__Method_ConfigurePulseVoltageLimitRange, serviceImpl.ConfigurePulseVoltageLimitRange)
          .AddMethod(__Method_ConfigureSense, serviceImpl.ConfigureSense)
          .AddMethod(__Method_ConfigureSoftwareEdgeMeasureTrigger, serviceImpl.ConfigureSoftwareEdgeMeasureTrigger)
          .AddMethod(__Method_ConfigureSoftwareEdgeMeasureTriggerWithChannels, serviceImpl.ConfigureSoftwareEdgeMeasureTriggerWithChannels)
          .AddMethod(__Method_ConfigureSoftwareEdgePulseTrigger, serviceImpl.ConfigureSoftwareEdgePulseTrigger)
          .AddMethod(__Method_ConfigureSoftwareEdgePulseTriggerWithChannels, serviceImpl.ConfigureSoftwareEdgePulseTriggerWithChannels)
          .AddMethod(__Method_ConfigureSoftwareEdgeSequenceAdvanceTrigger, serviceImpl.ConfigureSoftwareEdgeSequenceAdvanceTrigger)
          .AddMethod(__Method_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels, serviceImpl.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels)
          .AddMethod(__Method_ConfigureSoftwareEdgeShutdownTriggerWithChannels, serviceImpl.ConfigureSoftwareEdgeShutdownTriggerWithChannels)
          .AddMethod(__Method_ConfigureSoftwareEdgeSourceTrigger, serviceImpl.ConfigureSoftwareEdgeSourceTrigger)
          .AddMethod(__Method_ConfigureSoftwareEdgeSourceTriggerWithChannels, serviceImpl.ConfigureSoftwareEdgeSourceTriggerWithChannels)
          .AddMethod(__Method_ConfigureSoftwareEdgeStartTrigger, serviceImpl.ConfigureSoftwareEdgeStartTrigger)
          .AddMethod(__Method_ConfigureSoftwareEdgeStartTriggerWithChannels, serviceImpl.ConfigureSoftwareEdgeStartTriggerWithChannels)
          .AddMethod(__Method_ConfigureSourceMode, serviceImpl.ConfigureSourceMode)
          .AddMethod(__Method_ConfigureSourceModeWithChannels, serviceImpl.ConfigureSourceModeWithChannels)
          .AddMethod(__Method_ConfigureVoltageLevel, serviceImpl.ConfigureVoltageLevel)
          .AddMethod(__Method_ConfigureVoltageLevelRange, serviceImpl.ConfigureVoltageLevelRange)
          .AddMethod(__Method_ConfigureVoltageLimit, serviceImpl.ConfigureVoltageLimit)
          .AddMethod(__Method_ConfigureVoltageLimitRange, serviceImpl.ConfigureVoltageLimitRange)
          .AddMethod(__Method_CreateAdvancedSequence, serviceImpl.CreateAdvancedSequence)
          .AddMethod(__Method_CreateAdvancedSequenceCommitStepWithChannels, serviceImpl.CreateAdvancedSequenceCommitStepWithChannels)
          .AddMethod(__Method_CreateAdvancedSequenceStep, serviceImpl.CreateAdvancedSequenceStep)
          .AddMethod(__Method_CreateAdvancedSequenceStepWithChannels, serviceImpl.CreateAdvancedSequenceStepWithChannels)
          .AddMethod(__Method_CreateAdvancedSequenceWithChannels, serviceImpl.CreateAdvancedSequenceWithChannels)
          .AddMethod(__Method_DeleteAdvancedSequence, serviceImpl.DeleteAdvancedSequence)
          .AddMethod(__Method_DeleteAdvancedSequenceWithChannels, serviceImpl.DeleteAdvancedSequenceWithChannels)
          .AddMethod(__Method_Disable, serviceImpl.Disable)
          .AddMethod(__Method_DisablePulseTrigger, serviceImpl.DisablePulseTrigger)
          .AddMethod(__Method_DisablePulseTriggerWithChannels, serviceImpl.DisablePulseTriggerWithChannels)
          .AddMethod(__Method_DisableSequenceAdvanceTrigger, serviceImpl.DisableSequenceAdvanceTrigger)
          .AddMethod(__Method_DisableSequenceAdvanceTriggerWithChannels, serviceImpl.DisableSequenceAdvanceTriggerWithChannels)
          .AddMethod(__Method_DisableShutdownTriggerWithChannels, serviceImpl.DisableShutdownTriggerWithChannels)
          .AddMethod(__Method_DisableSourceTrigger, serviceImpl.DisableSourceTrigger)
          .AddMethod(__Method_DisableSourceTriggerWithChannels, serviceImpl.DisableSourceTriggerWithChannels)
          .AddMethod(__Method_DisableStartTrigger, serviceImpl.DisableStartTrigger)
          .AddMethod(__Method_DisableStartTriggerWithChannels, serviceImpl.DisableStartTriggerWithChannels)
          .AddMethod(__Method_ErrorMessage, serviceImpl.ErrorMessage)
          .AddMethod(__Method_ErrorQuery, serviceImpl.ErrorQuery)
          .AddMethod(__Method_ExportAttributeConfigurationBuffer, serviceImpl.ExportAttributeConfigurationBuffer)
          .AddMethod(__Method_ExportAttributeConfigurationFile, serviceImpl.ExportAttributeConfigurationFile)
          .AddMethod(__Method_ExportSignal, serviceImpl.ExportSignal)
          .AddMethod(__Method_ExportSignalWithChannels, serviceImpl.ExportSignalWithChannels)
          .AddMethod(__Method_FetchMultiple, serviceImpl.FetchMultiple)
          .AddMethod(__Method_FetchMultipleLCR, serviceImpl.FetchMultipleLCR)
          .AddMethod(__Method_GetAttributeViBoolean, serviceImpl.GetAttributeViBoolean)
          .AddMethod(__Method_GetAttributeViInt32, serviceImpl.GetAttributeViInt32)
          .AddMethod(__Method_GetAttributeViInt64, serviceImpl.GetAttributeViInt64)
          .AddMethod(__Method_GetAttributeViReal64, serviceImpl.GetAttributeViReal64)
          .AddMethod(__Method_GetAttributeViSession, serviceImpl.GetAttributeViSession)
          .AddMethod(__Method_GetAttributeViString, serviceImpl.GetAttributeViString)
          .AddMethod(__Method_GetChannelName, serviceImpl.GetChannelName)
          .AddMethod(__Method_GetChannelNameFromString, serviceImpl.GetChannelNameFromString)
          .AddMethod(__Method_GetError, serviceImpl.GetError)
          .AddMethod(__Method_GetExtCalLastDateAndTime, serviceImpl.GetExtCalLastDateAndTime)
          .AddMethod(__Method_GetExtCalLastTemp, serviceImpl.GetExtCalLastTemp)
          .AddMethod(__Method_GetExtCalRecommendedInterval, serviceImpl.GetExtCalRecommendedInterval)
          .AddMethod(__Method_GetLCRCompensationLastDateAndTime, serviceImpl.GetLCRCompensationLastDateAndTime)
          .AddMethod(__Method_GetLCRCustomCableCompensationData, serviceImpl.GetLCRCustomCableCompensationData)
          .AddMethod(__Method_GetNextCoercionRecord, serviceImpl.GetNextCoercionRecord)
          .AddMethod(__Method_GetNextInterchangeWarning, serviceImpl.GetNextInterchangeWarning)
          .AddMethod(__Method_GetSelfCalLastDateAndTime, serviceImpl.GetSelfCalLastDateAndTime)
          .AddMethod(__Method_GetSelfCalLastTemp, serviceImpl.GetSelfCalLastTemp)
          .AddMethod(__Method_ImportAttributeConfigurationBuffer, serviceImpl.ImportAttributeConfigurationBuffer)
          .AddMethod(__Method_ImportAttributeConfigurationFile, serviceImpl.ImportAttributeConfigurationFile)
          .AddMethod(__Method_InitializeWithChannels, serviceImpl.InitializeWithChannels)
          .AddMethod(__Method_InitializeWithIndependentChannels, serviceImpl.InitializeWithIndependentChannels)
          .AddMethod(__Method_Initiate, serviceImpl.Initiate)
          .AddMethod(__Method_InitiateWithChannels, serviceImpl.InitiateWithChannels)
          .AddMethod(__Method_InvalidateAllAttributes, serviceImpl.InvalidateAllAttributes)
          .AddMethod(__Method_Measure, serviceImpl.Measure)
          .AddMethod(__Method_MeasureMultiple, serviceImpl.MeasureMultiple)
          .AddMethod(__Method_MeasureMultipleLCR, serviceImpl.MeasureMultipleLCR)
          .AddMethod(__Method_PerformLCRLoadCompensation, serviceImpl.PerformLCRLoadCompensation)
          .AddMethod(__Method_PerformLCROpenCompensation, serviceImpl.PerformLCROpenCompensation)
          .AddMethod(__Method_PerformLCROpenCustomCableCompensation, serviceImpl.PerformLCROpenCustomCableCompensation)
          .AddMethod(__Method_PerformLCRShortCompensation, serviceImpl.PerformLCRShortCompensation)
          .AddMethod(__Method_PerformLCRShortCustomCableCompensation, serviceImpl.PerformLCRShortCustomCableCompensation)
          .AddMethod(__Method_QueryInCompliance, serviceImpl.QueryInCompliance)
          .AddMethod(__Method_QueryLatchedOutputCutoffState, serviceImpl.QueryLatchedOutputCutoffState)
          .AddMethod(__Method_QueryMaxCurrentLimit, serviceImpl.QueryMaxCurrentLimit)
          .AddMethod(__Method_QueryMaxVoltageLevel, serviceImpl.QueryMaxVoltageLevel)
          .AddMethod(__Method_QueryMinCurrentLimit, serviceImpl.QueryMinCurrentLimit)
          .AddMethod(__Method_QueryOutputState, serviceImpl.QueryOutputState)
          .AddMethod(__Method_ReadCurrentTemperature, serviceImpl.ReadCurrentTemperature)
          .AddMethod(__Method_Reset, serviceImpl.Reset)
          .AddMethod(__Method_ResetDevice, serviceImpl.ResetDevice)
          .AddMethod(__Method_ResetInterchangeCheck, serviceImpl.ResetInterchangeCheck)
          .AddMethod(__Method_ResetWithChannels, serviceImpl.ResetWithChannels)
          .AddMethod(__Method_ResetWithDefaults, serviceImpl.ResetWithDefaults)
          .AddMethod(__Method_RevisionQuery, serviceImpl.RevisionQuery)
          .AddMethod(__Method_SelfTest, serviceImpl.SelfTest)
          .AddMethod(__Method_SendSoftwareEdgeTrigger, serviceImpl.SendSoftwareEdgeTrigger)
          .AddMethod(__Method_SendSoftwareEdgeTriggerWithChannels, serviceImpl.SendSoftwareEdgeTriggerWithChannels)
          .AddMethod(__Method_SetAttributeViBoolean, serviceImpl.SetAttributeViBoolean)
          .AddMethod(__Method_SetAttributeViInt32, serviceImpl.SetAttributeViInt32)
          .AddMethod(__Method_SetAttributeViInt64, serviceImpl.SetAttributeViInt64)
          .AddMethod(__Method_SetAttributeViReal64, serviceImpl.SetAttributeViReal64)
          .AddMethod(__Method_SetAttributeViSession, serviceImpl.SetAttributeViSession)
          .AddMethod(__Method_SetAttributeViString, serviceImpl.SetAttributeViString)
          .AddMethod(__Method_SetSequence, serviceImpl.SetSequence)
          .AddMethod(__Method_WaitForEvent, serviceImpl.WaitForEvent)
          .AddMethod(__Method_WaitForEventWithChannels, serviceImpl.WaitForEventWithChannels).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NiDCPowerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Abort, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.AbortRequest, global::NationalInstruments.Grpc.DCPower.AbortResponse>(serviceImpl.Abort));
      serviceBinder.AddMethod(__Method_AbortWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.AbortWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.AbortWithChannelsResponse>(serviceImpl.AbortWithChannels));
      serviceBinder.AddMethod(__Method_CalSelfCalibrate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateRequest, global::NationalInstruments.Grpc.DCPower.CalSelfCalibrateResponse>(serviceImpl.CalSelfCalibrate));
      serviceBinder.AddMethod(__Method_ClearError, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ClearErrorRequest, global::NationalInstruments.Grpc.DCPower.ClearErrorResponse>(serviceImpl.ClearError));
      serviceBinder.AddMethod(__Method_ClearInterchangeWarnings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsRequest, global::NationalInstruments.Grpc.DCPower.ClearInterchangeWarningsResponse>(serviceImpl.ClearInterchangeWarnings));
      serviceBinder.AddMethod(__Method_ClearLatchedOutputCutoffState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateRequest, global::NationalInstruments.Grpc.DCPower.ClearLatchedOutputCutoffStateResponse>(serviceImpl.ClearLatchedOutputCutoffState));
      serviceBinder.AddMethod(__Method_Close, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CloseRequest, global::NationalInstruments.Grpc.DCPower.CloseResponse>(serviceImpl.Close));
      serviceBinder.AddMethod(__Method_Commit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CommitRequest, global::NationalInstruments.Grpc.DCPower.CommitResponse>(serviceImpl.Commit));
      serviceBinder.AddMethod(__Method_CommitWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CommitWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CommitWithChannelsResponse>(serviceImpl.CommitWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureApertureTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureApertureTimeResponse>(serviceImpl.ConfigureApertureTime));
      serviceBinder.AddMethod(__Method_ConfigureAutoZero, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroRequest, global::NationalInstruments.Grpc.DCPower.ConfigureAutoZeroResponse>(serviceImpl.ConfigureAutoZero));
      serviceBinder.AddMethod(__Method_ConfigureCurrentLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelResponse>(serviceImpl.ConfigureCurrentLevel));
      serviceBinder.AddMethod(__Method_ConfigureCurrentLevelRange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLevelRangeResponse>(serviceImpl.ConfigureCurrentLevelRange));
      serviceBinder.AddMethod(__Method_ConfigureCurrentLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitResponse>(serviceImpl.ConfigureCurrentLimit));
      serviceBinder.AddMethod(__Method_ConfigureCurrentLimitRange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureCurrentLimitRangeResponse>(serviceImpl.ConfigureCurrentLimitRange));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeMeasureTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerResponse>(serviceImpl.ConfigureDigitalEdgeMeasureTrigger));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeMeasureTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeMeasureTriggerWithChannelsResponse>(serviceImpl.ConfigureDigitalEdgeMeasureTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgePulseTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerResponse>(serviceImpl.ConfigureDigitalEdgePulseTrigger));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgePulseTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgePulseTriggerWithChannelsResponse>(serviceImpl.ConfigureDigitalEdgePulseTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeSequenceAdvanceTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerResponse>(serviceImpl.ConfigureDigitalEdgeSequenceAdvanceTrigger));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannelsResponse>(serviceImpl.ConfigureDigitalEdgeSequenceAdvanceTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeShutdownTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeShutdownTriggerWithChannelsResponse>(serviceImpl.ConfigureDigitalEdgeShutdownTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeSourceTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerResponse>(serviceImpl.ConfigureDigitalEdgeSourceTrigger));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeSourceTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeSourceTriggerWithChannelsResponse>(serviceImpl.ConfigureDigitalEdgeSourceTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeStartTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerResponse>(serviceImpl.ConfigureDigitalEdgeStartTrigger));
      serviceBinder.AddMethod(__Method_ConfigureDigitalEdgeStartTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureDigitalEdgeStartTriggerWithChannelsResponse>(serviceImpl.ConfigureDigitalEdgeStartTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureLCRCustomCableCompensation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.ConfigureLCRCustomCableCompensationResponse>(serviceImpl.ConfigureLCRCustomCableCompensation));
      serviceBinder.AddMethod(__Method_ConfigureOutputEnabled, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputEnabledResponse>(serviceImpl.ConfigureOutputEnabled));
      serviceBinder.AddMethod(__Method_ConfigureOutputFunction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputFunctionResponse>(serviceImpl.ConfigureOutputFunction));
      serviceBinder.AddMethod(__Method_ConfigureOutputResistance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOutputResistanceResponse>(serviceImpl.ConfigureOutputResistance));
      serviceBinder.AddMethod(__Method_ConfigureOvp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureOvpRequest, global::NationalInstruments.Grpc.DCPower.ConfigureOvpResponse>(serviceImpl.ConfigureOvp));
      serviceBinder.AddMethod(__Method_ConfigurePowerLineFrequency, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePowerLineFrequencyResponse>(serviceImpl.ConfigurePowerLineFrequency));
      serviceBinder.AddMethod(__Method_ConfigurePulseBiasCurrentLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLevelResponse>(serviceImpl.ConfigurePulseBiasCurrentLevel));
      serviceBinder.AddMethod(__Method_ConfigurePulseBiasCurrentLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasCurrentLimitResponse>(serviceImpl.ConfigurePulseBiasCurrentLimit));
      serviceBinder.AddMethod(__Method_ConfigurePulseBiasVoltageLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLevelResponse>(serviceImpl.ConfigurePulseBiasVoltageLevel));
      serviceBinder.AddMethod(__Method_ConfigurePulseBiasVoltageLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseBiasVoltageLimitResponse>(serviceImpl.ConfigurePulseBiasVoltageLimit));
      serviceBinder.AddMethod(__Method_ConfigurePulseCurrentLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelResponse>(serviceImpl.ConfigurePulseCurrentLevel));
      serviceBinder.AddMethod(__Method_ConfigurePulseCurrentLevelRange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLevelRangeResponse>(serviceImpl.ConfigurePulseCurrentLevelRange));
      serviceBinder.AddMethod(__Method_ConfigurePulseCurrentLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitResponse>(serviceImpl.ConfigurePulseCurrentLimit));
      serviceBinder.AddMethod(__Method_ConfigurePulseCurrentLimitRange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseCurrentLimitRangeResponse>(serviceImpl.ConfigurePulseCurrentLimitRange));
      serviceBinder.AddMethod(__Method_ConfigurePulseVoltageLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelResponse>(serviceImpl.ConfigurePulseVoltageLevel));
      serviceBinder.AddMethod(__Method_ConfigurePulseVoltageLevelRange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLevelRangeResponse>(serviceImpl.ConfigurePulseVoltageLevelRange));
      serviceBinder.AddMethod(__Method_ConfigurePulseVoltageLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitResponse>(serviceImpl.ConfigurePulseVoltageLimit));
      serviceBinder.AddMethod(__Method_ConfigurePulseVoltageLimitRange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigurePulseVoltageLimitRangeResponse>(serviceImpl.ConfigurePulseVoltageLimitRange));
      serviceBinder.AddMethod(__Method_ConfigureSense, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSenseRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSenseResponse>(serviceImpl.ConfigureSense));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeMeasureTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerResponse>(serviceImpl.ConfigureSoftwareEdgeMeasureTrigger));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeMeasureTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeMeasureTriggerWithChannelsResponse>(serviceImpl.ConfigureSoftwareEdgeMeasureTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgePulseTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerResponse>(serviceImpl.ConfigureSoftwareEdgePulseTrigger));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgePulseTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgePulseTriggerWithChannelsResponse>(serviceImpl.ConfigureSoftwareEdgePulseTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeSequenceAdvanceTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerResponse>(serviceImpl.ConfigureSoftwareEdgeSequenceAdvanceTrigger));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannelsResponse>(serviceImpl.ConfigureSoftwareEdgeSequenceAdvanceTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeShutdownTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeShutdownTriggerWithChannelsResponse>(serviceImpl.ConfigureSoftwareEdgeShutdownTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeSourceTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerResponse>(serviceImpl.ConfigureSoftwareEdgeSourceTrigger));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeSourceTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeSourceTriggerWithChannelsResponse>(serviceImpl.ConfigureSoftwareEdgeSourceTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeStartTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerResponse>(serviceImpl.ConfigureSoftwareEdgeStartTrigger));
      serviceBinder.AddMethod(__Method_ConfigureSoftwareEdgeStartTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSoftwareEdgeStartTriggerWithChannelsResponse>(serviceImpl.ConfigureSoftwareEdgeStartTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureSourceMode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeResponse>(serviceImpl.ConfigureSourceMode));
      serviceBinder.AddMethod(__Method_ConfigureSourceModeWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ConfigureSourceModeWithChannelsResponse>(serviceImpl.ConfigureSourceModeWithChannels));
      serviceBinder.AddMethod(__Method_ConfigureVoltageLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelResponse>(serviceImpl.ConfigureVoltageLevel));
      serviceBinder.AddMethod(__Method_ConfigureVoltageLevelRange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLevelRangeResponse>(serviceImpl.ConfigureVoltageLevelRange));
      serviceBinder.AddMethod(__Method_ConfigureVoltageLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitResponse>(serviceImpl.ConfigureVoltageLimit));
      serviceBinder.AddMethod(__Method_ConfigureVoltageLimitRange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeRequest, global::NationalInstruments.Grpc.DCPower.ConfigureVoltageLimitRangeResponse>(serviceImpl.ConfigureVoltageLimitRange));
      serviceBinder.AddMethod(__Method_CreateAdvancedSequence, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceResponse>(serviceImpl.CreateAdvancedSequence));
      serviceBinder.AddMethod(__Method_CreateAdvancedSequenceCommitStepWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceCommitStepWithChannelsResponse>(serviceImpl.CreateAdvancedSequenceCommitStepWithChannels));
      serviceBinder.AddMethod(__Method_CreateAdvancedSequenceStep, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepResponse>(serviceImpl.CreateAdvancedSequenceStep));
      serviceBinder.AddMethod(__Method_CreateAdvancedSequenceStepWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceStepWithChannelsResponse>(serviceImpl.CreateAdvancedSequenceStepWithChannels));
      serviceBinder.AddMethod(__Method_CreateAdvancedSequenceWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.CreateAdvancedSequenceWithChannelsResponse>(serviceImpl.CreateAdvancedSequenceWithChannels));
      serviceBinder.AddMethod(__Method_DeleteAdvancedSequence, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceRequest, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceResponse>(serviceImpl.DeleteAdvancedSequence));
      serviceBinder.AddMethod(__Method_DeleteAdvancedSequenceWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DeleteAdvancedSequenceWithChannelsResponse>(serviceImpl.DeleteAdvancedSequenceWithChannels));
      serviceBinder.AddMethod(__Method_Disable, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisableRequest, global::NationalInstruments.Grpc.DCPower.DisableResponse>(serviceImpl.Disable));
      serviceBinder.AddMethod(__Method_DisablePulseTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerResponse>(serviceImpl.DisablePulseTrigger));
      serviceBinder.AddMethod(__Method_DisablePulseTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisablePulseTriggerWithChannelsResponse>(serviceImpl.DisablePulseTriggerWithChannels));
      serviceBinder.AddMethod(__Method_DisableSequenceAdvanceTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerResponse>(serviceImpl.DisableSequenceAdvanceTrigger));
      serviceBinder.AddMethod(__Method_DisableSequenceAdvanceTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableSequenceAdvanceTriggerWithChannelsResponse>(serviceImpl.DisableSequenceAdvanceTriggerWithChannels));
      serviceBinder.AddMethod(__Method_DisableShutdownTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableShutdownTriggerWithChannelsResponse>(serviceImpl.DisableShutdownTriggerWithChannels));
      serviceBinder.AddMethod(__Method_DisableSourceTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerResponse>(serviceImpl.DisableSourceTrigger));
      serviceBinder.AddMethod(__Method_DisableSourceTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableSourceTriggerWithChannelsResponse>(serviceImpl.DisableSourceTriggerWithChannels));
      serviceBinder.AddMethod(__Method_DisableStartTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerRequest, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerResponse>(serviceImpl.DisableStartTrigger));
      serviceBinder.AddMethod(__Method_DisableStartTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.DisableStartTriggerWithChannelsResponse>(serviceImpl.DisableStartTriggerWithChannels));
      serviceBinder.AddMethod(__Method_ErrorMessage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ErrorMessageRequest, global::NationalInstruments.Grpc.DCPower.ErrorMessageResponse>(serviceImpl.ErrorMessage));
      serviceBinder.AddMethod(__Method_ErrorQuery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ErrorQueryRequest, global::NationalInstruments.Grpc.DCPower.ErrorQueryResponse>(serviceImpl.ErrorQuery));
      serviceBinder.AddMethod(__Method_ExportAttributeConfigurationBuffer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferRequest, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationBufferResponse>(serviceImpl.ExportAttributeConfigurationBuffer));
      serviceBinder.AddMethod(__Method_ExportAttributeConfigurationFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileRequest, global::NationalInstruments.Grpc.DCPower.ExportAttributeConfigurationFileResponse>(serviceImpl.ExportAttributeConfigurationFile));
      serviceBinder.AddMethod(__Method_ExportSignal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ExportSignalRequest, global::NationalInstruments.Grpc.DCPower.ExportSignalResponse>(serviceImpl.ExportSignal));
      serviceBinder.AddMethod(__Method_ExportSignalWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ExportSignalWithChannelsResponse>(serviceImpl.ExportSignalWithChannels));
      serviceBinder.AddMethod(__Method_FetchMultiple, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.FetchMultipleRequest, global::NationalInstruments.Grpc.DCPower.FetchMultipleResponse>(serviceImpl.FetchMultiple));
      serviceBinder.AddMethod(__Method_FetchMultipleLCR, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRRequest, global::NationalInstruments.Grpc.DCPower.FetchMultipleLCRResponse>(serviceImpl.FetchMultipleLCR));
      serviceBinder.AddMethod(__Method_GetAttributeViBoolean, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViBooleanResponse>(serviceImpl.GetAttributeViBoolean));
      serviceBinder.AddMethod(__Method_GetAttributeViInt32, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt32Response>(serviceImpl.GetAttributeViInt32));
      serviceBinder.AddMethod(__Method_GetAttributeViInt64, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViInt64Response>(serviceImpl.GetAttributeViInt64));
      serviceBinder.AddMethod(__Method_GetAttributeViReal64, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Request, global::NationalInstruments.Grpc.DCPower.GetAttributeViReal64Response>(serviceImpl.GetAttributeViReal64));
      serviceBinder.AddMethod(__Method_GetAttributeViSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViSessionResponse>(serviceImpl.GetAttributeViSession));
      serviceBinder.AddMethod(__Method_GetAttributeViString, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetAttributeViStringRequest, global::NationalInstruments.Grpc.DCPower.GetAttributeViStringResponse>(serviceImpl.GetAttributeViString));
      serviceBinder.AddMethod(__Method_GetChannelName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetChannelNameRequest, global::NationalInstruments.Grpc.DCPower.GetChannelNameResponse>(serviceImpl.GetChannelName));
      serviceBinder.AddMethod(__Method_GetChannelNameFromString, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringRequest, global::NationalInstruments.Grpc.DCPower.GetChannelNameFromStringResponse>(serviceImpl.GetChannelNameFromString));
      serviceBinder.AddMethod(__Method_GetError, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetErrorRequest, global::NationalInstruments.Grpc.DCPower.GetErrorResponse>(serviceImpl.GetError));
      serviceBinder.AddMethod(__Method_GetExtCalLastDateAndTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalLastDateAndTimeResponse>(serviceImpl.GetExtCalLastDateAndTime));
      serviceBinder.AddMethod(__Method_GetExtCalLastTemp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalLastTempResponse>(serviceImpl.GetExtCalLastTemp));
      serviceBinder.AddMethod(__Method_GetExtCalRecommendedInterval, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalRequest, global::NationalInstruments.Grpc.DCPower.GetExtCalRecommendedIntervalResponse>(serviceImpl.GetExtCalRecommendedInterval));
      serviceBinder.AddMethod(__Method_GetLCRCompensationLastDateAndTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetLCRCompensationLastDateAndTimeResponse>(serviceImpl.GetLCRCompensationLastDateAndTime));
      serviceBinder.AddMethod(__Method_GetLCRCustomCableCompensationData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataRequest, global::NationalInstruments.Grpc.DCPower.GetLCRCustomCableCompensationDataResponse>(serviceImpl.GetLCRCustomCableCompensationData));
      serviceBinder.AddMethod(__Method_GetNextCoercionRecord, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordRequest, global::NationalInstruments.Grpc.DCPower.GetNextCoercionRecordResponse>(serviceImpl.GetNextCoercionRecord));
      serviceBinder.AddMethod(__Method_GetNextInterchangeWarning, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningRequest, global::NationalInstruments.Grpc.DCPower.GetNextInterchangeWarningResponse>(serviceImpl.GetNextInterchangeWarning));
      serviceBinder.AddMethod(__Method_GetSelfCalLastDateAndTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeRequest, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastDateAndTimeResponse>(serviceImpl.GetSelfCalLastDateAndTime));
      serviceBinder.AddMethod(__Method_GetSelfCalLastTemp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempRequest, global::NationalInstruments.Grpc.DCPower.GetSelfCalLastTempResponse>(serviceImpl.GetSelfCalLastTemp));
      serviceBinder.AddMethod(__Method_ImportAttributeConfigurationBuffer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferRequest, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationBufferResponse>(serviceImpl.ImportAttributeConfigurationBuffer));
      serviceBinder.AddMethod(__Method_ImportAttributeConfigurationFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileRequest, global::NationalInstruments.Grpc.DCPower.ImportAttributeConfigurationFileResponse>(serviceImpl.ImportAttributeConfigurationFile));
      serviceBinder.AddMethod(__Method_InitializeWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitializeWithChannelsResponse>(serviceImpl.InitializeWithChannels));
      serviceBinder.AddMethod(__Method_InitializeWithIndependentChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitializeWithIndependentChannelsResponse>(serviceImpl.InitializeWithIndependentChannels));
      serviceBinder.AddMethod(__Method_Initiate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.InitiateRequest, global::NationalInstruments.Grpc.DCPower.InitiateResponse>(serviceImpl.Initiate));
      serviceBinder.AddMethod(__Method_InitiateWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.InitiateWithChannelsResponse>(serviceImpl.InitiateWithChannels));
      serviceBinder.AddMethod(__Method_InvalidateAllAttributes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesRequest, global::NationalInstruments.Grpc.DCPower.InvalidateAllAttributesResponse>(serviceImpl.InvalidateAllAttributes));
      serviceBinder.AddMethod(__Method_Measure, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.MeasureRequest, global::NationalInstruments.Grpc.DCPower.MeasureResponse>(serviceImpl.Measure));
      serviceBinder.AddMethod(__Method_MeasureMultiple, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.MeasureMultipleRequest, global::NationalInstruments.Grpc.DCPower.MeasureMultipleResponse>(serviceImpl.MeasureMultiple));
      serviceBinder.AddMethod(__Method_MeasureMultipleLCR, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRRequest, global::NationalInstruments.Grpc.DCPower.MeasureMultipleLCRResponse>(serviceImpl.MeasureMultipleLCR));
      serviceBinder.AddMethod(__Method_PerformLCRLoadCompensation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRLoadCompensationResponse>(serviceImpl.PerformLCRLoadCompensation));
      serviceBinder.AddMethod(__Method_PerformLCROpenCompensation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCompensationResponse>(serviceImpl.PerformLCROpenCompensation));
      serviceBinder.AddMethod(__Method_PerformLCROpenCustomCableCompensation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCROpenCustomCableCompensationResponse>(serviceImpl.PerformLCROpenCustomCableCompensation));
      serviceBinder.AddMethod(__Method_PerformLCRShortCompensation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCompensationResponse>(serviceImpl.PerformLCRShortCompensation));
      serviceBinder.AddMethod(__Method_PerformLCRShortCustomCableCompensation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationRequest, global::NationalInstruments.Grpc.DCPower.PerformLCRShortCustomCableCompensationResponse>(serviceImpl.PerformLCRShortCustomCableCompensation));
      serviceBinder.AddMethod(__Method_QueryInCompliance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.QueryInComplianceRequest, global::NationalInstruments.Grpc.DCPower.QueryInComplianceResponse>(serviceImpl.QueryInCompliance));
      serviceBinder.AddMethod(__Method_QueryLatchedOutputCutoffState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateRequest, global::NationalInstruments.Grpc.DCPower.QueryLatchedOutputCutoffStateResponse>(serviceImpl.QueryLatchedOutputCutoffState));
      serviceBinder.AddMethod(__Method_QueryMaxCurrentLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.QueryMaxCurrentLimitResponse>(serviceImpl.QueryMaxCurrentLimit));
      serviceBinder.AddMethod(__Method_QueryMaxVoltageLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelRequest, global::NationalInstruments.Grpc.DCPower.QueryMaxVoltageLevelResponse>(serviceImpl.QueryMaxVoltageLevel));
      serviceBinder.AddMethod(__Method_QueryMinCurrentLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitRequest, global::NationalInstruments.Grpc.DCPower.QueryMinCurrentLimitResponse>(serviceImpl.QueryMinCurrentLimit));
      serviceBinder.AddMethod(__Method_QueryOutputState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.QueryOutputStateRequest, global::NationalInstruments.Grpc.DCPower.QueryOutputStateResponse>(serviceImpl.QueryOutputState));
      serviceBinder.AddMethod(__Method_ReadCurrentTemperature, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureRequest, global::NationalInstruments.Grpc.DCPower.ReadCurrentTemperatureResponse>(serviceImpl.ReadCurrentTemperature));
      serviceBinder.AddMethod(__Method_Reset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ResetRequest, global::NationalInstruments.Grpc.DCPower.ResetResponse>(serviceImpl.Reset));
      serviceBinder.AddMethod(__Method_ResetDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ResetDeviceRequest, global::NationalInstruments.Grpc.DCPower.ResetDeviceResponse>(serviceImpl.ResetDevice));
      serviceBinder.AddMethod(__Method_ResetInterchangeCheck, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckRequest, global::NationalInstruments.Grpc.DCPower.ResetInterchangeCheckResponse>(serviceImpl.ResetInterchangeCheck));
      serviceBinder.AddMethod(__Method_ResetWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ResetWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.ResetWithChannelsResponse>(serviceImpl.ResetWithChannels));
      serviceBinder.AddMethod(__Method_ResetWithDefaults, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsRequest, global::NationalInstruments.Grpc.DCPower.ResetWithDefaultsResponse>(serviceImpl.ResetWithDefaults));
      serviceBinder.AddMethod(__Method_RevisionQuery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.RevisionQueryRequest, global::NationalInstruments.Grpc.DCPower.RevisionQueryResponse>(serviceImpl.RevisionQuery));
      serviceBinder.AddMethod(__Method_SelfTest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SelfTestRequest, global::NationalInstruments.Grpc.DCPower.SelfTestResponse>(serviceImpl.SelfTest));
      serviceBinder.AddMethod(__Method_SendSoftwareEdgeTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerRequest, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerResponse>(serviceImpl.SendSoftwareEdgeTrigger));
      serviceBinder.AddMethod(__Method_SendSoftwareEdgeTriggerWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.SendSoftwareEdgeTriggerWithChannelsResponse>(serviceImpl.SendSoftwareEdgeTriggerWithChannels));
      serviceBinder.AddMethod(__Method_SetAttributeViBoolean, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViBooleanResponse>(serviceImpl.SetAttributeViBoolean));
      serviceBinder.AddMethod(__Method_SetAttributeViInt32, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt32Response>(serviceImpl.SetAttributeViInt32));
      serviceBinder.AddMethod(__Method_SetAttributeViInt64, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViInt64Response>(serviceImpl.SetAttributeViInt64));
      serviceBinder.AddMethod(__Method_SetAttributeViReal64, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Request, global::NationalInstruments.Grpc.DCPower.SetAttributeViReal64Response>(serviceImpl.SetAttributeViReal64));
      serviceBinder.AddMethod(__Method_SetAttributeViSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViSessionResponse>(serviceImpl.SetAttributeViSession));
      serviceBinder.AddMethod(__Method_SetAttributeViString, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SetAttributeViStringRequest, global::NationalInstruments.Grpc.DCPower.SetAttributeViStringResponse>(serviceImpl.SetAttributeViString));
      serviceBinder.AddMethod(__Method_SetSequence, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.SetSequenceRequest, global::NationalInstruments.Grpc.DCPower.SetSequenceResponse>(serviceImpl.SetSequence));
      serviceBinder.AddMethod(__Method_WaitForEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.WaitForEventRequest, global::NationalInstruments.Grpc.DCPower.WaitForEventResponse>(serviceImpl.WaitForEvent));
      serviceBinder.AddMethod(__Method_WaitForEventWithChannels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsRequest, global::NationalInstruments.Grpc.DCPower.WaitForEventWithChannelsResponse>(serviceImpl.WaitForEventWithChannels));
    }

  }
}
#endregion
